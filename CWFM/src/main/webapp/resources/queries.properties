GET_ALL_PES=select cpe.UNITID,cpe.NAME,cpe.ADDRESS,cpe.MANAGERNAME,cpe.MANAGERADDRS,cpe.BUSINESSTYPE,cpe.MAXWORKMEN,cpe.MAXCNTRWORKMEN,cpe.BOCWAPPLICABILITY,cpe.ISMWAPPLICABILITY, cpe.CODE,cpe.ORGANIZATION,cpe.PFCODE,cpe.LICENSENUMBER,cpe.WCNUMBER,cpe.ESICNUMBER,cpe.PTREGNO,cpe.LWFREGNO,cpe.FACTORYLICENCENUMBER,cpe.ISRCAPPLICABLE,cpe.RCNUMBER,cpe.ATTACHMENTNM,cpe.STATEID,cpe.ISACTIVE from ORGLEVELENTRY ole join ORGLEVELDEF old on old.ORGLEVELDEFID=ole.ORGLEVELDEFID join OLACCTSETMM oasm on oasm.ORGLEVELENTRYID=ole.ORGLEVELENTRYID join ORGACCTSET oas on oas.ORGACCTSETID=oasm.ORGACCTSETID join CMSPRINCIPALEMPLOYER cpe on cpe.CODE = ole.name where oas.SHORTNM=? and ole.INACTIVE='1' and old.NAME like 'Principal%'    

GET_PE_BY_UNITID=select UNITID,NAME,ADDRESS,MANAGERNAME,MANAGERADDRS,BUSINESSTYPE,MAXWORKMEN,MAXCNTRWORKMEN,BOCWAPPLICABILITY,ISMWAPPLICABILITY,  CODE,ORGANIZATION,PFCODE,LICENSENUMBER,WCNUMBER,ESICNUMBER,PTREGNO,LWFREGNO,FACTORYLICENCENUMBER,ISRCAPPLICABLE,RCNUMBER,ATTACHMENTNM,STATEID,ISACTIVE from CMSPRINCIPALEMPLOYER WHERE UNITID=?

GET_ALL_CONTRACTORS = SELECT CONTRACTORREGID,UNITCODE,CODE,CONTRACTORNAME,STATUS,TYPE FROM CMSContractorRegistration where TYPE='Create';
   
SAVE_INSERT_CONTRACTOR_DETAILS = INSERT INTO CMSContractorRegistration(CONTRACTORREGID,CONTRACTORID,CODE,UNITID,CONTRACTORNAME,MANAGERNM,TOTALSTRENGTH,MAXNOEMP,NATUREOFWORK,LOCOFWORK,PFNUM,RCVALIDATED,MAINCONTRACTOR,CONTTYPE,PERIODSTARTDATE,PERIODENDDATE,TYPE,STATUS,CREATEDDTM,CREATEDBY,AADHARNUM,AADHARDOCNAME,PANNUM,PANDOCNAME,PFAPPLYDT,GST,ADDRESS,EMAILADDR,MOBILENO)values(?,?,?,?, ?,?,?,?, ?,?,?,?, ?,?,?,?, ?,?,GETDATE(),?, ?,?,?,?,?,?,?,?,?);

GET_CONTRACTOR_DETAILS = SELECT CONTRACTORREGID,UNITCODE,UNITNAME,CODE,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTYPE FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

GET_ALL_CONTRACTOR_DETAIL_VIEW =SELECT CONTRACTORREGID,cpe.NAME as UNITID,ccr.CODE,ccr.MANAGERNM,LOCOFWORK,TOTALSTRENGTH,MAXNOEMP,PFNUM,NATUREOFWORK,PERIODSTARTDATE,PERIODENDDATE,CONTTYPE,RCVALIDATED,MAINCONTRACTOR,ccr.CONTRACTORNAME,ccr.EMAILADDR,ccr.MOBILENO,ccr.AADHARNUM,ccr.AADHARDOCNAME,ccr.PANNUM,ccr.PANDOCNAME,ccr.PFAPPLYDT,ccr.GST,ccr.ADDRESS,ccr.CREATEDBY FROM CMSContractorRegistration ccr join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=ccr.UNITID where CONTRACTORREGID=?;


GET_ALL_RENEWAL_LIST_CONTRACTORS = SELECT CONTRACTORREGID,UNITCODE,CODE,CONTRACTORNAME,STATUS FROM CMSContractorRegistration;

GET_ALL_CONTRACTOR_ADD_DETAIL_VIEW=SELECT  crp.CONTRACTORPROFILEID  ,crp.CONTRACTORREGID  , crp.CONTRACTORID  , crp.UNITID  ,cwo.SAP_WORKORDER_NUM as WONUMBER  , crp.WCCODE  ,crp.NATUREOFID  , crp.WCFROMDTM  ,crp.WCTODTM  ,crp.WCTOTAL  , cgm.GMNAME as LICENCETYPE , crp.ATTACHMENTNAME  FROM CMSContractorRegPolicy crp join CMSWORKORDER cwo on cwo.WORKORDERID=crp.WONUMBER join CMSGENERALMASTER cgm on cgm.GMID=crp.LICENCETYPE where CONTRACTORREGID=?

GET_RENEWAL_CONTRACTORS_VIEW=SELECT CONTRACTORREGID,UNITCODE,UNITNAME,CONTRACTORID,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTTYPE FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

SET_RENEWAL_DETAILS=insert into CMSContractorRegistration(CONTRACTORID,CONTRACTORREGID,UNITCODE,UNITNAME,CONTRACTORID,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTTYPE) values((select isnull(max(CONTRACTORID),0)+1 from CMSContractorRegistration),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

GET_RENEW_CONTRACTOR_ADD_DETAIL_VIEW=select LICENCETYPE,WCCODE,WCTOTAL,WCFROMDTM,WCTODTM,ATTACHMENTNAME,ISGLOBAL,SUBCONTAPPL from CMSContractorRegPolicy;

SET_UNIQUE_REGISTRATION_ID=SELECT COUNT(*) FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

GET_MASTERUSER_BY_USERNAME_AND_PASSWROD=select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.UserAccount,mu.ContactNumber,mu.Status,mu.Password from MasterUser mu where mu.UserAccount=? and mu.Password=?

GET_MASTERUSER_BY_USERACCOUNT =select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.userAccount,mu.ContactNumber,mu.Status,mu.Password  from MasterUser mu where mu.userAccount=? 

GET_ALL_PRINCIPAL_EMPLOYER=select cpe.UNITID, cpe.NAME from USERAUTHRELINFO uari  join CMSPRINCIPALEMPLOYER cpe on uari.AuthorizationValue=cpe.UNITID and uari.IsActive='A' where uari.UserId=? and uari.AuthorizationOn='unitId'					 	

GET_CONTRACOTR_BY_ID=SELECT * FROM CMSCONTRACTOR WHERE CONTRACTORID = ?

GET_ALL_WORKORDER_BY_PE_AND_CONT=select cwo.WORKORDERID,cwo.NAME,cwo.VALIDFROM,cwo.VALIDDT from CMSWORKORDER cwo  where UNITID=? and CONTRACTORID=? 

GET_ALL_WORKORDER_BY_CONT=SELECT WORKORDERID, SAP_WORKORDER_NUM, CONTRACTORID, VALIDFROM, VALIDDT, UNITID,TYPEID,SECID,DEPID,STATUS FROM CMSWORKORDER WHERE  UNITID = ?  AND CONTRACTORID = ? 

GET_CONTRPEMM_BY_PE_AND_CONT=SELECT * FROM CMSCONTRPEMM WHERE CONTRACTORID = ? AND UNITID = ?

GET_MAPPING_BY_PE_CONT=SELECT * FROM CMSContractor_WC WHERE CONTRACTORID = ? AND UNITID = ? AND LICENCE_TYPE = ?

GET_WO_BY_ID=select * from CMSWORKORDER where WORKORDERID=?

GET_BILL_LIST=select WCTransID,UnitCode,ContractorCode,ContractorName,WorkOrderNumber,StartDate,EndDate,Status,Services from CMSWageCostWorkFlow;

GET_BILL_DETAIL_VIEW=select wcw.WCTransID,wcw.UnitCode,wcw.UnitName,wcw.ContractorCode,wcw.ContractorName,wcw.StartDate,wcw.EndDate,wcw.WorkOrderNumber,bty.BILLTYPENAME,wcw.WOValidFrom,wcw.WOValidTo from CMSWageCostWorkFlow wcw join CMSBVRBILLTYPES bty on bty.BILLTYPEID=wcw.BillType where wcw.WCTransID=?;


GET_BILL_REPORTS_DETAIL_VIEW=select MRReport,BVRReport,BonusReport,ExtraHoursReport,WCReport,FormA,FormB,FormC,FormD,EcrPF,PFChallan,EcrESIC,ESICChallan,BankStatement,AnnualReturn,BonusRegister,LWFChallan,PTChallan,UserAttachment1,UserAttachment2,UserAttachment3 from CMSWageCostDocuments WHERE WCTransID=?

GET_BILL_HR_CLEARANCE_VIEW=select LLStatus,LLCopy,LLValidTo,EmpReg,WageReg,LoanRecovery,AttenReg,AnnualReturn,PFSlip,PFSlipDate,PFEcr,PFECRDate,ESICSlip,ESICSlipDate,ESICEcr,ESICECRDate,BankStmntStatus,PTaxChallan,PTaxDate,AccidentPolicy,AccidentPolicyValidTo,LaborWelfare,LabWelFundActDate,BonusReg,LeaveWihtWages,PreMonWage,PreMonWageDate,ActionPlan  from CMSWageCostHRCheckList where WCTransID=?;

GET_BILL_PRECOMMENTS_VIEW=SELECT STUFF((SELECT RA.PersonNumber + ':' + CAST(a1.CommentText AS VARCHAR(1000)) + '/ '  FROM CMSWageCostComments a1 INNER JOIN CMSWageCostApproval RA ON a1.Approvalid = RA.Approvalid  WHERE RA.WCTransID = wc.WCTransID  ORDER BY a1.Approvalid  FOR XML PATH ('')), 1, 0, '') AS precomments FROM CMSWageCostWorkFlow wc WHERE wc.WCTransID =?;

GET_ALL_CONTRACTOR_BY_PE=select old.NAME,ccp.contractorid,cc.NAME as contractorname,cc.CODE as contractorcode,cc.ADDRESS as contractoraddress from ORGLEVELENTRY ole join ORGLEVELDEF old on old.ORGLEVELDEFID=ole.ORGLEVELDEFID join OLACCTSETMM oasm on oasm.ORGLEVELENTRYID=ole.ORGLEVELENTRYID join ORGACCTSET oas on oas.ORGACCTSETID=oasm.ORGACCTSETID JOIN CMSCONTRACTOR cc ON cc.CODE=ole.NAME join CMSCONTRPEMM ccp on ccp.CONTRACTORID=cc.CONTRACTORID where oas.SHORTNM=? and ole.INACTIVE='1' and  old.NAME like 'Contractor' and ccp.UNITID=?

GET_PERSON_ORG_LEVEL=SELECT old.NAME AS LevelDef, COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN CAST(cpe.UNITID AS  NVARCHAR) END,CASE WHEN old.NAME LIKE 'Dep%' THEN cgm.GMID END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMID END,CASE WHEN old.NAME LIKE 'Contractor' THEN CAST(cc.ContractorId AS NVARCHAR) END) AS Id , ole.ORGLEVELENTRYID AS OleId,  COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.NAME END,CASE WHEN old.NAME LIKE 'Dep%' THEN cgm.GMNAME END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMNAME END,CASE WHEN old.NAME LIKE 'Contractor' THEN cc.NAME END) AS Description FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE = ole.NAME AND old.NAME LIKE 'Principal%' LEFT JOIN CMSGENERALMASTER cgm ON cgm.GMNAME = ole.NAME AND old.NAME LIKE 'Dep%' LEFT JOIN CMSGENERALMASTER cgm1 ON cgm1.GMNAME = ole.NAME AND old.NAME LIKE 'Area' LEFT JOIN CMSCONTRACTOR cc ON cc.CODE = ole.NAME AND old.NAME LIKE 'Contractor' WHERE oas.SHORTNM = ? AND ole.INACTIVE = '1'

 GET_ALL_CMSGENERALMASTER=select cgm.GMID,cgm.GMNAME, cgt.GMTYPE from CMSGENERALMASTER cgm join CMSGMTYPE cgt on cgt.GMTYPEID=cgm.GMTYPEID  AND cgm.ISACTIVE=1
 
 GET_ALL_TRADES_BY_PE=select ct.TRADEID,ct.NAME  from CMSTRADE ct where ct.UNITID=? and ct.ISACTIVE=1
 
 
 GET_ALL_WC=select ccwc.WCID,ccwc.WC_CODE from CMSCONTRACTOR_WC ccwc where ccwc.UNITID=? and ccwc.CONTRACTORID=?  AND ccwc.WC_TO_DTM > GETDATE()
 
 GET_WORKFLOW_TYPE_BY_PE=select distinct gpwft.WorkflowType from CMSPRINCIPALEMPLOYER CPE  join GATEPASSWORKFLOWTYPE gpwft on gpwft.BusinessTypeId = cpe.BUSINESSTYPE WHERE CPE.UNITID=? and gpwft.WorkflowType in ('1','2','3')
  
 GET_DOT_TYPE_BY_PE =select distinct gpwft.WorkflowType  from CMSPRINCIPALEMPLOYER CPE JOIN CMSBUUnitMapping CBM ON CBM.UnitID=CPE.UNITID join GATEPASSWORKFLOWTYPE gpwft on gpwft.BusinessTypeId = CBM.BUId WHERE CPE.UNITID=? 
 
 GET_ALL_SKILL=select cs.SKILLID,cs.SKILLNM,cs.ISACTIVE from CMSSKILL cs
 
 GET_ALL_GATE_PASS_FOR_CREATOR=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus  from GATEPASSMAIN gpm  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId  join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=? and gpm.OnboardingType=? union select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm left JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId  left join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId left join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and gpm.GatePassTypeId=?and gpm.OnboardingType=?

GET_ALL_GATE_PASS_FOR_SEQUENTIAL_APPROVER=SELECT gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME AS ContractorName,    gpm.ContractorId AS VendorCode,    cpe.NAME AS UnitName,  gpm.GatePassStatus FROM GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID = gpm.ContractorId JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.UNITID = gpm.UnitId JOIN CMSGENERALMASTER cgm ON cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) JOIN CMSAPPROVERHIERARCHY cah   ON gpm.GatePassTypeId = cah.ACTION_ID AND cah.[Index] = (SELECT COUNT(DISTINCT gas.GatePassApprovalStatusId) + 1 FROM GATEPASSAPPROVALSTATUS gas JOIN CMSAPPROVERHIERARCHY cah1 ON gas.RoleId = cah1.ROLE_ID WHERE gas.status = 4 AND gas.GatePassTypeId = gpm.GatePassTypeId  AND gas.transactionId = gpm.transactionId  )LEFT JOIN GATEPASSAPPROVALSTATUS gas   ON gpm.transactionId = gas.transactionId AND cah.ROLE_ID = gas.RoleId AND gas.GatePassTypeId = gpm.GatePassTypeId  WHERE gpm.GatePassStatus ='3'   AND gpm.departmentid =?   AND gpm.UnitId =? AND gas.TransactionId IS NULL AND cah.ROLE_ID = ? AND gpm.GatePassTypeId=? AND gpm.OnboardingType=?

GET_ALL_GATE_PASS_FOR_PARALLEL_APPROVER=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) join CMSAPPROVERHIERARCHY cah     ON gpm.GatePassTypeId = cah.ACTION_ID left join  GATEPASSAPPROVALSTATUS gas ON gas.TransactionId = gpm.TransactionId AND gas.RoleId = ? and gas.GatePassTypeId=? where (cah.ROLE_ID=?) and gas.TransactionId IS NULL and gpm.GatePassStatus='3' and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=? and gpm.OnboardingType=?

GET_APPROVER_INFO_BY_GPTID=SELECT gah.hierarchy_id,gah.[Index],gah.Role_Name  FROM CMSAPPROVERHIERARCHY gah join CMSWORKFLOWTYPE cwt on gah.WorkFlowTypeId=cwt.WorkFlowTypeId WHERE gah.Action_id=? and gah.[Index] !='0' and  cwt.UnitId=? ORDER BY [Index] ASC

GET_APPROVAL_STATUS_BY_TRNSID = SELECT GatePassApprovalStatusId,TransactionId,GatePassId,UserId,UserRole,Status,Comments,LastUpdatedDate,GatePassTypeId  FROM GATEPASSAPPROVALSTATUS where TransactionId=? and GatePassTypeId='1'

GET_ALL_GATE_PASS_ACTION_FOR_CREATOR = select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and gpm.departmentid=? and gpm.UnitId=? and (gpm.GatePassTypeId=? and gpm.GatePassStatus=?) or gpm.GatePassTypeId=? 


GET_ALL_EIC=SELECT DISTINCT  mu.UserId,mu.userAccount,CONCAT(COALESCE(mu.FirstName, ''), ' ', COALESCE(mu.LastName, '')) AS FullName,urm.RoleId,cgm.GMNAME AS RoleName FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID JOIN MASTERUSER mu ON mu.userAccount = oas.SHORTNM JOIN UserRoleMapping urm ON urm.UserId = mu.UserId JOIN CMSGENERALMASTER cgm ON cgm.GMID = urm.RoleId LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE  = ole.NAME AND old.NAME LIKE 'Principal%' WHERE cgm.GMNAME   IN ('EIC')  and ((old.NAME LIKE 'Dep%' AND ole.NAME = ? )  OR  (cpe.UNITID=?)) GROUP BY mu.UserId, mu.userAccount,mu.FirstName,  mu.LastName, urm.RoleId, cgm.GMNAME --HAVING COUNT(DISTINCT old.NAME) = 2 order by userid 


LAST_APPROVER=select Role_Name FROM CMSAPPROVERHIERARCHY WHERE  [Index] = (SELECT MAX([Index]) FROM CMSAPPROVERHIERARCHY  WHERE ACTION_ID = ?) and ACTION_ID=?

GET_ALL_PES_FOR_ADMIN=select cpe.UNITID,cpe.NAME,cpe.ADDRESS,cpe.MANAGERNAME,cpe.MANAGERADDRS,cpe.BUSINESSTYPE,cpe.MAXWORKMEN,cpe.MAXCNTRWORKMEN,cpe.BOCWAPPLICABILITY,cpe.ISMWAPPLICABILITY, cpe.CODE,cpe.ORGANIZATION,cpe.PFCODE,cpe.LICENSENUMBER,cpe.WCNUMBER,cpe.ESICNUMBER,cpe.PTREGNO,cpe.LWFREGNO,cpe.FACTORYLICENCENUMBER,cpe.ISRCAPPLICABLE,cpe.RCNUMBER,cpe.ATTACHMENTNM,cpe.STATEID,cpe.ISACTIVE from CMSPRINCIPALEMPLOYER cpe

GET_ALL_CONTR_FOR_ADMIN=select ccp.contractorid,cc.NAME as contractorname,cc.CODE as contractorcode,cc.ADDRESS as contractoraddress from CMSCONTRPEMM ccp join CMSCONTRACTOR cc on ccp.CONTRACTORID=cc.CONTRACTORID where ccp.UNITID=?
  
 #new queries#

GET_BILL_EIC_VIEW=select VP.PERSONNUM+' - '+vp.FULLNM as AvailableEIC from PERSON VP where vp.PERSONNUM in (select wca.PersonNumber from CMSWageCostApproval wca where wca.WCTransID=? and wca.StepNumber=1 and wca.DeletedSwitch=0)

##COMMON DAO IMPL##

GET_MAPPINGS_BY_CONTRACTOR_ID_UNITID_LICENSETYPE=SELECT * FROM CMSContractor_WC WHERE CONTRACTORID = ? AND UNITID = ? AND LICENCE_TYPE = ?;

GET_WORKORDER_BY_ID=SELECT * FROM workorder WHERE id = ?;

GET_FINDBY=SELECT * FROM cmsgmtype WHERE id = ?;

GET_FIN_GMDBY_ID=SELECT GMNAME, GMDESCRIPTION FROM CMSGeneralMaster WHERE GMID = ?;

GET_CMS_GENERALMASTER_OPTION_BY_NAME=SELECT gm.* FROM CmsGeneralMaster gm JOIN CMSGMType gmt ON gm.gm_type_id = gmt.id WHERE gmt.gmType = ?;

FIND_GMTYPE_NAME=SELECT * FROM CMSGMTYPE WHERE GMTYPE = ?;

FIND_MASTER_NAME_AND_VALUE=SELECT * FROM CmsGeneralMaster WHERE gmname = ? AND gmdescription = ?;

CMS_GENERAL_MASTER_DUPLICATE=SELECT COUNT(*) FROM CmsGeneralMaster WHERE gmname = ? AND gmdescription = ?;

GET_ALL_GMTYPES=SELECT * FROM CMSGMType;

SAVE_GMTYPE=INSERT INTO CMSGMTYPE (GMTYPE) VALUES (?);

DEPENDENCY_CHECK_SQL=SELECT COUNT(*) FROM CmsGeneralMaster WHERE gmTypeId = ?;

DEPENDENCY_UPDATE_SQL=DELETE FROM CMSGENERALMASTER WHERE gmTypeId = ?;

DEPENDENCY_UPDATE=DELETE FROM CMSGMType WHERE gmTypeId = ?;

GET_ALL_CMS_GENERAL_MASTER=SELECT * FROM CmsGeneralMaster;

SAVE_CMS_GENERAL_MASTER=INSERT INTO CmsGeneralMaster (gmname, gmdescription, gmTypeId) VALUES (?, ?, ?);

DELETE_CMS_GENERAL_MASTER=DELETE FROM CmsGeneralMaster WHERE gmId = ?;

FIND_CMS_GENERAL_MASTER_BY_ID=SELECT * FROM CmsGeneralMaster WHERE gmId = ?;

GET_ALL_ROLE_RIGHTS=SELECT rr.ROLE_RIGHT_ID, rr.ROLE_ID, rr.PAGE_ID, rr.ADD_RIGHTS, rr.EDIT_RIGHTS, rr.DELETE_RIGHTS, rr.IMPORT_RIGHTS, rr.EXPORT_RIGHTS, rr.VIEW_RIGHTS, rr.LIST_RIGHTS, rr.ENABLED_FLAG, rr.DELETED_FLAG, rr.CREATED_BY, rr.CREATION_DATE, rr.LAST_UPDATED_BY, rr.LAST_UPDATED_DATE, r.GMTYPEID as roleTypeId, p.GMTYPEID as pageTypeId, r.GMNAME as roleName, p.GMNAME as pageName FROM CMSRoleRights rr JOIN CMSGeneralMaster r ON rr.ROLE_ID = r.GMID JOIN CMSGeneralMaster p ON rr.PAGE_ID = p.GMID JOIN CMSGMTYPE rType ON r.GMTYPEID = rType.GMTYPEID JOIN CMSGMTYPE pType ON p.GMTYPEID = pType.GMTYPEID WHERE rType.GMTYPE = 'ROLE' AND pType.GMTYPE = 'PAGE' and rr.DELETED_FLAG=0 ;

GET_ALL_ROLE_RIGHTS_BY_ID=SELECT * FROM CMSRoleRights WHERE roleId = ?;

SAVE_ROLE_RIGHTS=INSERT INTO CMSROLERIGHTS (ROLE_ID, PAGE_ID, ADD_RIGHTS, EDIT_RIGHTS, DELETE_RIGHTS, IMPORT_RIGHTS, EXPORT_RIGHTS, VIEW_RIGHTS, LIST_RIGHTS, ENABLED_FLAG, DELETED_FLAG, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATED_DATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

UPDATE_SAVE_ROLE_RIGHTS=UPDATE CMSROLERIGHTS SET ADD_RIGHTS = ?, EDIT_RIGHTS = ?, DELETE_RIGHTS = ?, IMPORT_RIGHTS = ?, EXPORT_RIGHTS = ?, VIEW_RIGHTS = ?, LIST_RIGHTS = ?, ENABLED_FLAG = ?, DELETED_FLAG = ?, CREATED_BY = ?, CREATION_DATE = ?, LAST_UPDATED_BY = ?, LAST_UPDATED_DATE = ? WHERE ROLE_RIGHT_ID = ?;

GET_GM_BY_TYPE=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_GM_BY_ID=SELECT * FROM CmsGeneralMaster WHERE gmId = ?;

GET_ALL_PAGES=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_ALL_SECTIONS=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?

GET_ALL_ROLES=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_ROLES=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = ?;

GET_PAGES=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = ?;

GET_PAGES_BY_ROLE=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = 'PAGE' AND gm.roleId = ?;

GET_ALL_STATES=SELECT * FROM CMSSTATE;

GET_GENERAL_MASTERS_WITH_TYPE_NAME=SELECT g.gmId, g.gmName, g.GMDESCRIPTION AS gmDescription, t.GMTYPE AS gmTypeName FROM CMSGENERALMASTER g JOIN CMSGMTYPE t ON g.gmTypeId = t.gmTypeId WHERE t.gmTypeId = ? and g.ISACTIVE=1 ;

DELETE_GM_DATA_BY_ID=UPDATE CMSGENERALMASTER SET ISACTIVE = 0,UPDATEDTM=GETDATE() WHERE gmId = ?;

SAVE_GENERAL_MASTER=INSERT INTO CMSGENERALMASTER (gmTypeId, gmName, GMDESCRIPTION,ISACTIVE,UPDATEDBY) VALUES (?, ?, ?,1,?);

CHECK_DUPLICATE_ROLE_RIGHTS=SELECT COUNT(*) FROM CMSRoleRights WHERE role_id = ? AND page_id = ? and DELETED_FLAG=0;

GET_ROLES_BY_USER_ID=SELECT gm.* FROM UserRoleMapping urm INNER JOIN CmsGeneralMaster gm ON urm.RoleId = gm.gmId WHERE urm.UserId = ?;

GET_ROLES_USER_ID=SELECT gm.* FROM UserRoleMapping urm INNER JOIN CmsGeneralMaster gm ON urm.RoleId = gm.gmId WHERE urm.UserId = ?;

GET_PAGES_BY_ROLES_ID=SELECT gm.* FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0;

GET_PAGES_ROLES_ID=SELECT gm.* FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0;

GET_AVAILABLE_PAGES_FOR_SECTION=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE'  and gm.ISACTIVE='1' AND gm.gmId NOT IN ( SELECT sp.page_id   FROM CMSSectionPage sp WHERE sp.section_id = ? AND sp.is_active = 0);

GET_SELECTED_PAGES_FOR_SECTIONS=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE'  and gm.ISACTIVE='1' AND gm.gmId IN (SELECT sp.page_id  FROM CMSSectionPage sp   WHERE sp.section_id = ? AND sp.is_active = 0);

SAVE_SECTION_SELECT_SQL=SELECT COUNT(*) FROM CMSSectionPage WHERE section_id = ? AND page_id = ?;

SAVE_SECTION_UPDATE_SQL=UPDATE CMSSectionPage SET is_active = 0, updated_by = ? WHERE section_id = ? AND page_id = ?;

SAVE_SECTION_INSERT_SQL=INSERT INTO CMSSectionPage (section_id, page_id, is_active, created_by, updated_by) VALUES (?, ?, ?, ?, ?);

GET_ALL_SECTIONS_WITH_PAGES=SELECT sp.section_id AS sectionId, gm_section.gmName AS sectionName, gm_page.gmId AS pageId, gm_page.gmName AS pageName ,gm_page.GMDESCRIPTION as pageUrl, gm_section.GMDESCRIPTION AS sectionIcon FROM CMSSectionPage sp LEFT JOIN CmsGeneralMaster gm_page ON sp.page_id = gm_page.gmId LEFT JOIN CmsGeneralMaster gm_section ON sp.section_id = gm_section.gmId LEFT JOIN CMSGMType gmt ON gm_page.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE' AND sp.is_active = 0;

GET_SECTIONS_BY_ROLEID=SELECT DISTINCT sp.section_id AS sectionId, gm_section.gmName AS sectionName,gm_page.gmId AS pageId,gm_page.gmName AS pageName, gm_page.GMDESCRIPTION AS pageUrl,gm_section.GMDESCRIPTION AS sectionIcon FROM CMSSectionPage sp LEFT JOIN CmsGeneralMaster gm_page ON sp.page_id = gm_page.gmId LEFT JOIN CmsGeneralMaster gm_section ON sp.section_id = gm_section.gmId LEFT JOIN CMSGMType gmt ON gm_page.gmTypeId = gmt.gmTypeId LEFT JOIN CMSROLERIGHTS rpm ON sp.page_id = rpm.page_id WHERE gmt.gmType = 'PAGE' AND sp.is_active = 0 AND rpm.role_id = ?;

GET_PAGE_ID_BY_ROLE_ID=SELECT gm.gmId FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0
 
HAS_PAGE_ACCESS_FOR_ROLE=SELECT COUNT(*) FROM CMSROLERIGHTS WHERE ROLE_ID = ? AND PAGE_ID = ? AND ENABLED_FLAG = 1 AND DELETED_FLAG = 0;

GET_PERSON_ORG_LEVEL_DETAILS=SELECT old.NAME AS LevelDef,ole.ORGLEVELENTRYID AS OleId,COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN CAST(cpe.UNITID AS  NVARCHAR) END,CASE WHEN old.NAME LIKE 'Dep%' THEN cgm.GMID END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMID END,CASE WHEN old.NAME LIKE 'Business%' THEN cbt.BUId END,CASE WHEN old.NAME LIKE 'Contractor' THEN CAST(cc.ContractorId AS NVARCHAR) END ) AS Id ,COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.NAME END,CASE WHEN old.NAME LIKE 'Dep%' THEN cgm.GMNAME END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMNAME END,CASE WHEN old.NAME LIKE 'Business%' THEN cbt.BUName END,CASE WHEN old.NAME LIKE 'Contractor' THEN cc.NAME END  ) AS Description FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE  = ole.NAME AND old.NAME LIKE 'Principal%' LEFT JOIN CMSGENERALMASTER cgm ON cgm.GMNAME  = ole.NAME AND old.NAME LIKE 'Dep%' LEFT JOIN CMSGENERALMASTER cgm1 ON cgm1.GMNAME  = ole.NAME AND old.NAME LIKE 'Area' LEFT JOIN CMSCONTRACTOR cc ON cc.CODE = ole.NAME AND old.NAME LIKE 'Contractor' LEFT JOIN CMSBusinessType cbt on cbt.BUName=ole.NAME and old.NAME LIKE 'Business%' WHERE oas.SHORTNM = ? AND ole.INACTIVE = '1'

GET_ROLE_RIGHTS_BY_ROLE_AND_PAGE=SELECT rr.ROLE_RIGHT_ID, rr.ROLE_ID, rr.PAGE_ID, rr.ADD_RIGHTS, rr.EDIT_RIGHTS, rr.DELETE_RIGHTS, rr.IMPORT_RIGHTS, rr.EXPORT_RIGHTS, rr.VIEW_RIGHTS, rr.LIST_RIGHTS, rr.ENABLED_FLAG, rr.DELETED_FLAG, rr.CREATED_BY, rr.CREATION_DATE, rr.LAST_UPDATED_BY, rr.LAST_UPDATED_DATE, r.GMTYPEID as roleTypeId, p.GMTYPEID as pageTypeId, r.GMNAME as roleName, p.GMNAME as pageName FROM CMSRoleRights rr JOIN CMSGeneralMaster r ON rr.ROLE_ID = r.GMID JOIN CMSGeneralMaster p ON rr.PAGE_ID = p.GMID JOIN CMSGMTYPE rType ON r.GMTYPEID = rType.GMTYPEID JOIN CMSGMTYPE pType ON p.GMTYPEID = pType.GMTYPEID WHERE rType.GMTYPE = 'ROLE' AND pType.GMTYPE = 'PAGE' AND rr.ROLE_ID = ? AND rr.PAGE_ID = ?;

##MASTER USER DAOIMPL##

GET_MASTERUSER_BY_USERACCOUNT =select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.userAccount,mu.ContactNumber,mu.Status,mu.Password  from MasterUser mu where mu.userAccount=? 

GET_MASTERUSER_BY_USERNAME_AND_PASSWROD=select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.UserName,mu.RoleName,mu.ContactNumber,mu.Status,mu.BusinessType from MasterUser mu where mu.UserName=? and mu.Password=?

GET_PASSWORD_BY_USERID=SELECT Password FROM MASTERUSER WHERE UserId = ?;

GET_UPDATE_PASSWORD=UPDATE MASTERUSER SET Password = ? WHERE UserId = ?;

##ORG LEVEL DAOIMPL##

SAVE_ORG_LEVEL=INSERT INTO ORGLEVELDEF (NAME, SHORTNAME, ORGHIERARCHYLEVEL, MINIMUMLENGTH, MAXIMUMLENGTH,UPDATEDBYUSRACCTID)VALUES (?, ?, ?, ?, ?, ?);

FIND_BY_NAME_AND_SHORTNAME=SELECT * FROM ORGLEVELDEF WHERE NAME = ? AND SHORTNAME = ?;

EXISTS_BY_NAME_SHORTNAME_AND_HIERARCHY=SELECT COUNT(*) FROM ORGLEVELDEF WHERE LOWER(NAME) = LOWER(?) AND LOWER(SHORTNAME) = LOWER(?) AND ORGHIERARCHYLEVEL = ? and INACTIVE=1;

SAVE_OR_LEVEL_CHECK=SELECT COUNT(*) FROM ORGLEVELDEF WHERE NAME = ? AND SHORTNAME = ?;

SAVE_OR_LEVEL_UPDATE=UPDATE ORGLEVELDEF SET ORGHIERARCHYLEVEL = ?, MINIMUMLENGTH = ?, MAXIMUMLENGTH = ?, UPDATEDBYUSRACCTID = ? WHERE NAME = ? AND SHORTNAME = ?;

SAVE_OR_LEVEL_INSERT=INSERT INTO ORGLEVELDEF (NAME, SHORTNAME, ORGHIERARCHYLEVEL, MINIMUMLENGTH, MAXIMUMLENGTH,  UPDATEDBYUSRACCTID) VALUES (?, ?, ?, ?, ?,  ?);

IS_HIERARCHY_LEVEL=SELECT COUNT(*) FROM ORGLEVELDEF WHERE ORGHIERARCHYLEVEL = ?;

HAS_DEPENDENCIES=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ?;

DELETE_ORG_LEVEL=UPDATE ORGLEVELDEF SET INACTIVE=0 WHERE ORGLEVELDEFID = ?;

FETCH_ALL_ORG_LEVELS=SELECT * FROM ORGLEVELDEF where INACTIVE=1;

UPDATE_ORG_LEVEL=UPDATE ORGLEVELDEF SET ORGLEVELNAME = ?, SHORTNAME = ?, ORGHIERARCHYLEVEL = ? WHERE ORGLEVELDEFID = ?;

UPDATE_OR_LEVEL=UPDATE ORGLEVELDEF SET INACTIVE=0 WHERE ORGLEVELDEFID = ?;

UPDATE_ORG_LEVELS=UPDATE ORGLEVELDEF SET NAME = ?, SHORTNAME = ?, ORGHIERARCHYLEVEL = ?, MINIMUMLENGTH = ?, MAXIMUMLENGTH = ?, UPDATEDBYUSRACCTID = ?, UPDATE_DTM = CURRENT_TIMESTAMP WHERE ORGLEVELDEFID = ?;

EXISTS_BY_ID=SELECT COUNT(*) FROM ORGLEVELDEF WHERE ORGLEVELDEFID = ?;

GET_ACTIVE_ORG_LEVELS=SELECT ORGLEVELDEFID, NAME FROM ORGLEVELDEF WHERE INACTIVE = 1;

GET_ORG_ENTRIES_BY_DEF_ID=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

SAVE_ORG_LEVEL_ENTRY=INSERT INTO ORGLEVELENTRY (ORGLEVELDEFID, NAME, DESCRIPTION, INACTIVE, UPDATEDBYUSRACCTID) VALUES (?, ?, ?, ?, ?);

UPDATE_ORG_LEEVEL_ENTRY=UPDATE ORGLEVELENTRY SET NAME = ?, DESCRIPTION = ?, UPDATEDBYUSRACCTID = ? WHERE ORGLEVELENTRYID = ?;

DELETE_ORG_LEEVEL_ENTRY=UPDATE ORGLEVELENTRY SET INACTIVE = 0 WHERE ORGLEVELENTRYID = ?;

GET_ORG_LEVEL_ENTRY_BY_ID=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELENTRYID = ? AND INACTIVE = 1;

GET_AVAILABLE_ENTRIES=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

GET_SELECTED_ENTRIES=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

FIND_BASIC_INFO=SELECT TOP 1 os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

##ORG LEVEL MAPPING DAOIMPL##

FIND_ALL=SELECT om.*, os.SHORTNM as shortName, os.LONGDSC as longDescription FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID;

FIND_BY_ALL=SELECT om.*, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_ORG_BY_ID=SELECT om.*, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

SAVE=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID) VALUES (?, ?);

DELETE=DELETE FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ?;

GET_AVAILABLE_ENTRIES_QUERY =SELECT ORGLEVELENTRYID, NAME, DESCRIPTION FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1);

GET_SELECTED_ENTRIES_QUERY =SELECT ORGLEVELENTRYID, NAME, DESCRIPTION FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

INSERT_INTO_ORG_ACT_SET=INSERT INTO ORGACCTSET (SHORTNM, LONGDSC, ALLOWALLSW, VERSIONCNT, USEVALIDACCTSW)VALUES (?, ?, 0, 1, 0);

DELETE_EXISTING_RECORDS=DELETE FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ?;

INSERT_INTO_ORG_ACT_SETMM=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

GET_NEXT_ORG_ACCT_SET_ID-=SELECT MAX(ORGACCTSETID) FROM ORGACCTSET;

SAVE_ORG_ACCT_SET=INSERT INTO ORGACCTSET (SHORTNM, LONGDSC) OUTPUT INSERTED.ORGACCTSETID VALUES (?, ?);

SAVE_ORG_LEVEL_MAPPING=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, getdate());

FIND_AVAILABLE_MAPPINGS=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE NOT EXISTS ( SELECT 1 FROM ORGACCTSET os2 WHERE os2.ORGACCTSETID = om.ORGACCTSETID AND os2.ORGACCTSETID = ?);

FIND_SELECTED_MAPPINGS=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_BASIC_INFORMATION=SELECT TOP 1 os.SHORTNM, os.LONGDSC,om.ORGACCTSETID FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_ALL_MAPS=SELECT distinct os.ORGACCTSETID, os.SHORTNM as shortName, os.LONGDSC as longDescription FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID;

##USERDAOIMPL##

GET_USER_BY_ID=SELECT userId, userAccount, emailId, firstName, lastName, contactNumber,  status, password FROM MASTERUSER WHERE userId = ?;

GET_ALL_USERS=SELECT userId, userAccount, emailId, firstName, lastName, contactNumber,  status, password FROM MASTERUSER where status='A' ;

SAVE_USERS=INSERT INTO MASTERUSER (userId, userAccount, emailId, firstName, lastName, fullName, contactNumber,  status, password) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

UPDATE_USERS=UPDATE MASTERUSER SET userAccount = ?, emailId = ?, firstName = ?, lastName = ?, fullName = ?, contactNumber = ?,  status = ?, password = ? WHERE userId = ?;

DELETE_USERS=DELETE FROM MASTERUSER WHERE userId = ?;

SAVE_USER=INSERT INTO MASTERUSER (FirstName, LastName, EmailId, ContactNumber, Password, Status, userAccount) VALUES (?, ?, ?, ?, ?, 'A', ?);

##duplicate CHECK_DUPLICATE_ROLE_RIGHTS
CHECK_DUPLICATE_GMMASTER=select cgm.GMNAME from CMSGMTYPE cgt join CMSGENERALMASTER cgm on cgt.GMTYPEID=cgm.GMTYPEID where cgm.GMNAME=? and cgt.GMTYPEID=?;

TRANSACTION_ID_EXISTS=SELECT GPM.TransactionId FROM GATEPASSMAIN GPM WHERE GPM.TransactionId=?

GET_MASTER_USERACCOUNT=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? and status='A' ;

HAS_PAGE_ACTION_PERMISSION_FOR_ROLE= select crr.ADD_RIGHTS,crr.EDIT_RIGHTS,crr.DELETE_RIGHTS,crr.IMPORT_RIGHTS,crr.EXPORT_RIGHTS,crr.VIEW_RIGHTS from CMSROLERIGHTS  crr join CMSGENERALMASTER cgm on cgm.GMID=crr.PAGE_ID  where cgm.GMDESCRIPTION=? and ROLE_ID=? AND ENABLED_FLAG = 1 AND DELETED_FLAG = 0;

GET_NEXT_GATEPASSID_SEQ=SELECT MAX(CAST(SUBSTRING(GatePassId, 3, LEN(GatePassId)) AS INT)) FROM gatepassmain WHERE GatePassId IS NOT NULL AND GatePassId != '' 

GET_ALL_RENEW_FOR_CREATOR=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and (gpm.GatePassTypeId=? and gpm.GatePassStatus=?)or (gpm.GatePassTypeId ='2' and gpm.GatePassStatus in ('3','4')) and gpm.departmentid=? and gpm.UnitId=? and gpm.GatePassId IS NOT NULL AND gpm.GatePassId != ''

GET_ALL_GATE_PASS_ACTION_FOR_SEQUENTIAL_APPROVER=select  gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName, gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) JOIN CMSAPPROVERHIERARCHY cah ON gpm.GatePassTypeId = cah.ACTION_ID and cah.[Index]=((select count( DISTINCT gas.GatePassApprovalStatusId)+1 from CMSAPPROVERHIERARCHY cah1 join GATEPASSAPPROVALSTATUS gas on gas.RoleId=cah1.ROLE_ID and gas.status=4 and gpm.gatePassId=gas.gatePassId and gas.GatePassTypeId=?)) LEFT JOIN GATEPASSAPPROVALSTATUS gas ON gpm.GatePassId = gas.GatePassId AND cah.ROLE_ID = gas.RoleId and gas.GatePassTypeId=?	 where gpm.gatepassstatus='3' and gpm.GatePassTypeId=? AND gas.GatePassId IS NULL and cah.ROLE_ID=? and gpm.departmentid=? and gpm.UnitId=?

GET_ALL_GATE_PASS_ACTION_FOR_PARALLEL_APPROVER=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) join CMSAPPROVERHIERARCHY cah     ON gpm.GatePassTypeId = cah.ACTION_ID left join  GATEPASSAPPROVALSTATUS gas ON gas.GatePassId = gpm.GatePassId AND gas.RoleId = ? and gas.GatePassTypeId=? where (cah.ROLE_ID=? ) and gas.GatePassId IS NULL and gpm.GatePassStatus='3' and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=?

GET_VIEW_USER_DETAILS=SELECT  firstName, lastName,  emailId,contactNumber, password, userAccount FROM MASTERUSER WHERE UserId =?;

IS_DUPLICATE_ENTRY=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND NAME=? AND INACTIVE = 1;

GET_WORKORDERS_BY_CONTRACTORID_UNITID=SELECT WORKORDERID, SAP_WORKORDER_NUM, CONTRACTORID, VALIDFROM, VALIDDT, UNITID FROM Workorder WHERE CONTRACTORID = ? AND UNITID = ?;

IS_DUPLICATE_GM_NAME=SELECT COUNT(*) from CMSGMTYPE cgt join CMSGENERALMASTER cgm on cgt.GMTYPEID=cgm.GMTYPEID where cgm.GMNAME=? and cgt.GMTYPEID=? and cgm.ISACTIVE=1;

DELETE_ROLE_RIGHTS=UPDATE CMSROLERIGHTS SET DELETED_FLAG = '1' WHERE ROLE_RIGHT_ID = ?;

EXISTS_BY_SHORTNAME=SELECT COUNT(*) FROM ORGACCTSET WHERE SHORTNM = ?;

GET_ORG_LEVEL_MAPPING_BY_ID=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

GET_SELECTED_ENTRIE=SELECT oe.ORGLEVELENTRYID, oe.NAME, oe.DESCRIPTION FROM OLACCTSETMM om JOIN ORGLEVELENTRY oe ON om.ORGLEVELENTRYID = oe.ORGLEVELENTRYID WHERE om.ORGACCTSETID = ? AND oe.ORGLEVELDEFID = ?;

GET_AVAILABLE_ENTRIE=SELECT oe.ORGLEVELENTRYID, oe.NAME, oe.DESCRIPTION FROM ORGLEVELENTRY oe WHERE oe.ORGLEVELDEFID = ? AND NOT EXISTS (SELECT 1 FROM OLACCTSETMM om  WHERE om.ORGLEVELENTRYID = oe.ORGLEVELENTRYID AND om.ORGACCTSETID = ? );

UPDATE_ORG_LEVEL_ENTRIES_CHECK=SELECT COUNT(*) FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ? AND ORGACCTSETID = ?;

UPDATE_ORG_LEVEL_ENTRIES_INSERT=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

ORG_LEVEL_ENTRY_EXIST=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELENTRYID = ?;

SAVE_ORG_LEVEL_MAP=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

DELETE_ORG_LEVEL_MAPPING=DELETE FROM OLACCTSETMM WHERE ORGACCTSETID = ? AND ORGLEVELENTRYID = ?;

GET_EXIST_MAPPINGS=SELECT ORGLEVELENTRYID FROM OLACCTSETMM WHERE ORGACCTSETID = ?;

INSERT_ROLE_MAPPING=INSERT INTO UserRoleMapping (UserId, RoleId) VALUES (?, ?);

CHANGE_USERPASSWORD_SELECT=SELECT password FROM MASTERUSER WHERE userAccount = ? AND Status='A' ;

CHANGE_USERPASSWORD_UPDATE=UPDATE MASTERUSER SET password = ? WHERE userAccount = ? AND Status='A' ;

RESET_USERPASSWORD_SELECT=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? AND Status='A';

RESET_USERPASSWORD_UPDATE=UPDATE MASTERUSER SET password = ? WHERE userAccount = ? AND Status='A';

GET_USER_ROLE_IDS=SELECT RoleId FROM UserRoleMapping WHERE UserId = ?;

GET_USER_ROLE=SELECT RoleId FROM UserRoleMapping WHERE UserId = ?;

UPDATE_USER_ROLE=UPDATE MASTERUSER SET userAccount = ?, EmailId = ?, FirstName = ?, LastName = ?, ContactNumber = ?, Password = ? WHERE UserId = ?;

DELETE_USER_ROLE=DELETE FROM UserRoleMapping WHERE UserId = ?;

INSERT_USER_ROLE=INSERT INTO UserRoleMapping (UserId, RoleId) VALUES (?, ?);

DELETE_USER=UPDATE MASTERUSER SET status = 'NA' WHERE UserId = ?;

GET_ROLES_BY_USER=SELECT STRING_AGG(gm.GMNAME, '; ') AS RoleNames FROM UserRoleMapping urm JOIN CMSGENERALMASTER gm ON urm.RoleId = gm.GMID WHERE urm.UserId = ?;

DOES_USER_EXIST=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? AND Status='A';

DEPENDENCEY_ORGLEVEL_CHECK=select count(*) from ORGLEVELENTRY where ORGLEVELDEFID=?;

DEPENDENCY_ORGLEVEL_UPDATE=DELETE FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ?;

DEPENDENCY_ORGLEVEL_UPDATE_SQL=DELETE FROM ORGLEVELDEF WHERE ORGLEVELDEFID =?;

GET_ALL_ORG_LEVELS=select * from ORGLEVELDEF;

GET_MAX_TRANSACTION_ID = SELECT COALESCE(MAX(TransactionId), 9100000000) + 1 AS newTransactionId FROM GATEPASSMAIN

UPDATE_CONTRACT_WORKMEN =  update GATEPASSMAIN set GatePassTypeId=?, GatePassStatus=?, AadharNumber=?, FirstName=?, LastName=?, DOB=?, Gender=?, RelativeName=?,IdMark=?, MobileNumber=? , MaritalStatus=? , UnitId=?, ContractorId=?, WorkorderId=?, TradeId=?, SkillId=?, DepartmentId=?, AreaId=?, EicId=?, NatureOfJob=?, WcEsicNo=?, HazardousArea=?, AccessAreaId=?, UanNumber=?, HealthCheckDate=?,pfnumber=?,esicNumber=?, BloodGroupId=?, Accommodation=?, AcademicId=?, Technical=?, IfscCode=?, AccountNumber=?, EmergencyContactName=?,EmergencyContactNumber=?, WorkmenWageCategoryId=?, BonusPayoutId=?, PfCap=?,ZoneId=?, Basic=?, DA=?, HRA=?, WashingAllowance=?, OtherAllowance=?, UniformAllowance=?, AadharDocName=?, PhotoName=?, BankDocName=?, PoliceVerificationDocName=?, IdProof2DocName=?, MedicalDocName=?, EducationDocName=?, Form11DocName=?,TrainingDocName=?, OtherDocName=?,WorkFlowType=?,Comments=?,Address=?,DOJ=?,policeverificationDate=?, DOT=?,UpdatedBy=?, UpdatedDate=GETDATE() where transactionId=?

SAVE_CONTRACT_WORKMEN = INSERT INTO GATEPASSMAIN (TransactionId,GatePassId, GatePassTypeId, GatePassStatus, AadharNumber, FirstName, LastName, DOB, Gender, RelativeName, IdMark, MobileNumber , MaritalStatus , UnitId, ContractorId, WorkorderId, TradeId, SkillId, DepartmentId, AreaId, EicId, NatureOfJob, WcEsicNo, HazardousArea, AccessAreaId, UanNumber, HealthCheckDate,pfnumber,esicNumber,  BloodGroupId, Accommodation, AcademicId, Technical, IfscCode, AccountNumber,EmergencyContactName,EmergencyContactNumber, WorkmenWageCategoryId, BonusPayoutId, PfCap,ZoneId, Basic, DA, HRA, WashingAllowance, OtherAllowance, UniformAllowance,AadharDocName, PhotoName, BankDocName, PoliceVerificationDocName, IdProof2DocName, MedicalDocName, EducationDocName, Form11DocName, TrainingDocName, OtherDocName,WorkFlowType,Comments,Address,DOJ,policeverificationDate, DOT,UpdatedBy, UpdatedDate,OnboardingType) VALUES  (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,  ?, ?, ?, ?, ?,?,?,?,?,?,?, GETDATE(),?)

GET_CONTRACT_WORKMEN_DETAILS = SELECT TransactionId,GatePassId,GatePassTypeId,GatePassStatus,AadharNumber,gpm.OnboardingType,gpm.FirstName,gpm.LastName,DOB,Gender, RelativeName,IdMark,gpm.MobileNumber,MaritalStatus,gpm.UnitId as peId ,cpe.NAME as UnitId,cc.NAME as ContractorId,cwo.NAME as WorkorderId,ct.NAME as TradeId,cs.SKILLNM AS SkillId,DepartmentId,AreaId,  CONCAT(mu.FirstName,' ',mu.LastName) as EicId,NatureOfJob,ccwc.WC_CODE as WcEsicNo,HazardousArea,  AccessAreaId,UanNumber,HealthCheckDate ,pfnumber,gpm.esicNumber,BloodGroupId,Accommodation,AcademicId,Technical,IfscCode,AccountNumber,EmergencyContactNumber,EmergencyContactName, WorkmenWageCategoryId,BonusPayoutId ,ZoneId,Basic,DA,HRA,WashingAllowance,OtherAllowance,UniformAllowance,PfCap,AadharDocName,PhotoName,BankDocName, PoliceVerificationDocName,IdProof2DocName ,MedicalDocName,EducationDocName,Form11DocName,TrainingDocName,OtherDocName,UpdatedDate,gpm.UpdatedBy,gpm.Comments,gpm.Address,gpm.DOJ,gpm.policeverificationDate,gpm.DOT FROM GATEPASSMAIN gpm  join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID  = gpm.UnitId  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSWORKORDER cwo ON cwo.WORKORDERID = gpm.WorkorderId join CMSTRADE ct on ct.TRADEID = gpm.TradeId JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId join MASTERUSER mu on mu.UserId = gpm.EicId join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo where  gpm.transactionId=?

GET_ALL_CMSGENERALMASTER_FOR_GATE_PASS=select cgm.GMID,cgm.GMNAME, cgt.GMTYPE from CMSGENERALMASTER cgm join CMSGMTYPE cgt on cgt.GMTYPEID=cgm.GMTYPEID  where cgm.GMID in (?,?,?,?,?,?,?,?,?)

SAVE_GATEPASS_APPROVAL_STATUS = INSERT INTO GATEPASSAPPROVALSTATUS(TransactionId,GatePassId,UserId,UserRole,Status,Comments,GatePassTypeId,RoleId,LastUpdatedDate) VALUES (?,?,?,?,?,?,?,?,GETDATE())

GET_WORKFLOW_TYPE_BY_BT =select distinct gpwft.WorkflowType  from  GATEPASSWORKFLOWTYPE gpwft  WHERE gpwft.BusinessTypeId=?

UPDATE_GATEPASSMAIN_STATUS=update GATEPASSMAIN SET GatePassStatus=? where GatePassId=?

UPDATE_GATEPASSMAIN_STATUS_BY_TRANSACTION_ID=update GATEPASSMAIN SET GatePassStatus=? where TransactionId=?

UPDATE_GATEPASSMAIN_STATUS_TYPE=update GATEPASSMAIN SET GatePassStatus=?,GatePassTypeId=? where GatePassId=?

UPDATE_GATE_PASS_ACTION = update GATEPASSMAIN set GatePassTypeId=?,GatePassStatus=?,UpdatedBy=?,UpdatedDate=GETDATE(),Comments=? where GatePassId=?

SAVE_GATEPASS_STATUSLOG = INSERT INTO dbo.GATEPASSSTATUSLOG (TransactionId,GatePassId,GatePassType,Status,Comments,UpdatedBy,LastUpdatedDate) VALUES (?,?,?,?,?,?,GETDATE())

GET_GATE_PASS_BY_ID = select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.GatePassId=?

GET_VALIDITY_OF_WO_WC=select VALIDDT as validTill, 'WO' as source from CMSWORKORDER where WORKORDERID=? union select WC_TO_DTM as validTill,'WC' as source from CMSCONTRACTOR_WC where WCID=?

GET_CONTRACT_WORKMEN_DRAFT_DETAILS = SELECT TransactionId,GatePassId,GatePassTypeId,GatePassStatus,AadharNumber,gpm.FirstName,gpm.LastName,DOB,Gender,RelativeName,IdMark,MobileNumber,MaritalStatus,gpm.UnitId as peId,gpm.UnitId as UnitId,gpm.ContractorId as ContractorId,gpm.WorkorderId as WorkorderId,gpm.TradeId as TradeId,gpm.SkillId AS SkillId,DepartmentId,AreaId,CONCAT(mu.FirstName,' ',mu.LastName) as EicId,NatureOfJob,gpm.WcEsicNo as WcEsicNo,HazardousArea, AccessAreaId,UanNumber,HealthCheckDate ,pfnumber,gpm.esicNumber,BloodGroupId,Accommodation,AcademicId,Technical,IfscCode,AccountNumber,EmergencyContactNumber,EmergencyContactName,WorkmenWageCategoryId,BonusPayoutId ,ZoneId,Basic,DA,HRA,WashingAllowance,OtherAllowance,UniformAllowance,PfCap,AadharDocName,PhotoName,BankDocName,PoliceVerificationDocName,IdProof2DocName ,MedicalDocName,EducationDocName,Form11DocName,TrainingDocName,OtherDocName,UpdatedDate,gpm.UpdatedBy,gpm.Comments,gpm.Address,gpm.DOJ,gpm.policeverificationDate,gpm.DOT FROM GATEPASSMAIN gpm left join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID  = gpm.UnitId left JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId left join CMSWORKORDER cwo ON cwo.WORKORDERID = gpm.WorkorderId left join CMSTRADE ct on ct.TRADEID = gpm.TradeId left JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId left join MASTERUSER mu on mu.UserId = gpm.EicId left join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo where  gpm.TransactionId=?

UPDATE_GATEPASSID=update GATEPASSMAIN SET GatePassId=? where TransactionId=?

GET_CONTRACT_WORKMEN_DETAILS_BY_TRANSID = SELECT TransactionId,GatePassId,GatePassTypeId,GatePassStatus,AadharNumber,gpm.FirstName,gpm.LastName,DOB,Gender, RelativeName,IdMark,gpm.MobileNumber,MaritalStatus,gpm.UnitId as peId ,cpe.NAME as UnitId,cc.NAME as ContractorId,cwo.NAME as WorkorderId,ct.NAME as TradeId,cs.SKILLNM AS SkillId,DepartmentId,AreaId,CONCAT(mu.FirstName,' ',mu.LastName) as EicId,NatureOfJob,ccwc.WC_CODE as WcEsicNo,HazardousArea, AccessAreaId,UanNumber,HealthCheckDate ,pfnumber,gpm.esicNumber,BloodGroupId,Accommodation,AcademicId,Technical,IfscCode,AccountNumber,EmergencyContactNumber,EmergencyContactName,WorkmenWageCategoryId,BonusPayoutId ,ZoneId,Basic,DA,HRA,WashingAllowance,OtherAllowance,UniformAllowance,PfCap,AadharDocName,PhotoName,BankDocName, PoliceVerificationDocName,IdProof2DocName ,MedicalDocName,EducationDocName,Form11DocName,TrainingDocName,OtherDocName,UpdatedDate,gpm.UpdatedBy,gpm.Comments,gpm.Address,gpm.DOJ,gpm.policeverificationDate,gpm.DOT  FROM GATEPASSMAIN gpm join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID  = gpm.UnitId JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSWORKORDER cwo ON cwo.WORKORDERID = gpm.WorkorderId join CMSTRADE ct on ct.TRADEID = gpm.TradeId JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId join MASTERUSER mu on mu.UserId = gpm.EicId join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo where  gpm.TransactionId=?

GET_CONTRACT_WORKMEN_DETAILS_BY_GPID = SELECT TransactionId,GatePassId,GatePassTypeId,GatePassStatus,AadharNumber,gpm.FirstName,gpm.LastName,DOB,Gender,  RelativeName,IdMark,gpm.MobileNumber,MaritalStatus,gpm.UnitId as peId  ,cpe.NAME as UnitId,cc.NAME as ContractorId,cwo.NAME as WorkorderId,ct.NAME as TradeId,cs.SKILLNM AS SkillId,DepartmentId,AreaId,  CONCAT(mu.FirstName,' ',mu.LastName) as EicId,NatureOfJob,ccwc.WC_CODE as WcEsicNo,HazardousArea,  AccessAreaId,UanNumber,HealthCheckDate ,pfnumber,gpm.esicNumber ,BloodGroupId,Accommodation,AcademicId,Technical,IfscCode,AccountNumber,EmergencyContactNumber,EmergencyContactName,  WorkmenWageCategoryId,BonusPayoutId  ,ZoneId,Basic,DA,HRA,WashingAllowance,OtherAllowance,UniformAllowance,PfCap,AadharDocName,PhotoName,BankDocName,  PoliceVerificationDocName,IdProof2DocName  ,MedicalDocName,EducationDocName,Form11DocName,TrainingDocName,OtherDocName,UpdatedDate,gpm.UpdatedBy,gpm.Comments,gpm.Address,gpm.DOJ,gpm.policeverificationDate,gpm.DOT  FROM GATEPASSMAIN gpm  join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID  = gpm.UnitId  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId  join CMSWORKORDER cwo ON cwo.WORKORDERID = gpm.WorkorderId  join CMSTRADE ct on ct.TRADEID = gpm.TradeId  JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId  join MASTERUSER mu on mu.UserId = gpm.EicId  join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo  where  gpm.gatePassId=?

GET_WORKFLOW_TYPE_BY_TRANSACTION_ID=select distinct cwt.WorkflowType from GATEPASSMAIN gpm join CMSPRINCIPALEMPLOYER CPE on cpe.UNITID=gpm.UnitId join CMSBUUnitMapping cbt on cbt.UnitID=cpe.UNITID join CMSWORKFLOWTYPE cwt on cwt.BusinessTypeId = cbt.BUId join CMSAPPROVERHIERARCHY cah on cah.WorkFlowTypeId=cwt.WorkFlowTypeId WHERE gpm.TransactionId=? and cah.Action_Id=?


IS_LAST_APPROVER_FOR_PARALLEL=WITH RequiredApprovers AS (SELECT ROLE_ID FROM CMSAPPROVERHIERARCHY WHERE ACTION_ID = ? AND [INDEX] != 0  ), ApprovedRoles AS (SELECT DISTINCT RoleId FROM GATEPASSAPPROVALSTATUS WHERE TransactionId = ? and GatePassTypeId=? )  SELECT CASE WHEN (SELECT COUNT(*) FROM ApprovedRoles) = (SELECT COUNT(*) FROM RequiredApprovers) AND EXISTS (SELECT 1 FROM ApprovedRoles WHERE RoleId = ?) THEN 'YES' ELSE 'NO' END AS IsLastApprover

IS_LAST_APPROVER_FOR_GATEPASS_ACTION=WITH RequiredApprovers AS (SELECT ROLE_ID  FROM CMSAPPROVERHIERARCHY WHERE ACTION_ID = ? AND [INDEX] != 0  ),  ApprovedRoles AS (SELECT DISTINCT RoleId FROM GATEPASSAPPROVALSTATUS WHERE GatePassId = ?  and GatePassTypeId=?)  SELECT CASE WHEN (SELECT COUNT(*) FROM ApprovedRoles) = (SELECT COUNT(*) FROM RequiredApprovers) AND EXISTS (SELECT 1 FROM ApprovedRoles WHERE RoleId = ?)  THEN 'YES' ELSE 'NO'  END AS IsLastApprover

GET_ALL_BT=select cbt.BUId,cbt.BUName from CMSBusinessType cbt join CMSBUUnitMapping  cbum on cbt.BUId=cbum.BUId where cbum.UnitID=?

GET_EXISTING_WORKFLOW_AND_HIERARCHY=SELECT w.WORKFLOWTYPEID,w.WORKFLOWTYPE,ah.ACTION_ID,ah.ACTION_NAME,ah.ROLE_ID,ah.ROLE_NAME,ah.[INDEX] as HIERARCHYINDEX FROM CMSWORKFLOWTYPE w LEFT JOIN CMSAPPROVERHIERARCHY ah ON w.WORKFLOWTYPEID = ah.WORKFLOWTYPEID WHERE w.UnitId = ? AND w.BusinessTypeId = ? AND w.ModuleId = ? AND ah.ACTION_NAME=? 

GET_WORKFLOW_TYPE_BY_PE_ACTIONID=select distinct cwt.WorkflowType from CMSWORKFLOWTYPE cwt join CMSAPPROVERHIERARCHY cah on cah.WorkFlowTypeId=cwt.WorkFlowTypeId where cwt.UnitId=? and cah.Action_id=?  

GET_MAX_CONTRACTOR_REG_ID=SELECT COALESCE(MAX(CONTRACTORREGID), 6100000000) + 1 AS CONTRACTORREGID FROM CMSContractorRegistration

GET_ALL_CONTRACTOR_FOR_REG=select distinct cMSCONTRACTOR.CONTRACTORID ,UNITID, cMSCONTRACTOR.NAME, ADDRESS,CODE from cMSCONTRACTOR, CMSWORKORDER WHERE cMSCONTRACTOR.CONTRACTORID =CMSWORKORDER.CONTRACTORID AND CMSWORKORDER.UNITID=?

GET_ALL_CONTRACTOR_DETAIL_FOR_REG=select A.CONTRACTORID ,UNITID, NAME, ADDRESS,CODE,MANAGERNM,ESIWC ,LICENSENUM,CONVERT(varchar, VALIDFROMDT, 23) AS VALIDFROMDT,   CONVERT(varchar, VALIDTODT, 23) AS VALIDTODT,COVERAGE,TOTALSTRENGTH,MAXNOEMP,NATUREOFWORK,LOCOFWORK , CONVERT(varchar, PERIODSTARTDT, 23) AS PERIODSTARTDT,CONVERT(varchar, PERIODENDDT, 23) AS PERIODENDDT ,VENDORCODE ,PFCODE ,ESIVALIDFROM ,ESIVALIDTO, ESIWCCOVERAGE ,PFNUM,PFAPPLYDT,IS_BLOCKED,RCVALIDATED,LLVALIDATED,WCVALIDATED from cMSCONTRACTOR A, CMSCONTRPEMM B, CMSVENDOR C WHERE A.CONTRACTORID =B.CONTRACTORID AND B.VENDORID = C.VENDORID AND A.CONTRACTORID=? and UNITID = ?

GET_WO_FOR_CONTRACTOR_REG=select wo.WORKORDERID ,wo.UNITID,c.CONTRACTORID ,c.NAME ,VALIDFROM ,VALIDDT ,TYPEID ,DEPID ,SECID ,GLCODE ,COSTCENTER ,OWNERID ,SUPRID ,STATUS ,SAP_WORKORDER_NUM from CMSWORKORDER wo inner join cMSCONTRACTOR c on c.CONTRACTORID =wo.CONTRACTORID where wo.CONTRACTORID=? and wo.UNITID=? and CAST(GETDATE() AS DATE) BETWEEN CAST(VALIDFROM AS DATE) AND CAST(VALIDDT AS DATE)

GET_ACTION_ID=select gm.GMID,gm.GMNAME from CMSGENERALMASTER gm join CMSGMTYPE gmt on gmt.GMTYPEID=gm.GMTYPEID where gmt.GMTYPE='ACTION' and gm.GMNAME like '%?%'

GET_MAX_WC_TNX_ID=SELECT COALESCE(MAX(WCTransID), 6100000000) + 1 AS WCTransID FROM CMSWageCostWorkFlow

GET_PE_DETAIL_FOR_BILL=SELECT old.NAME AS LevelDef, CASE WHEN old.NAME LIKE 'Principal%' THEN CAST(cpe.UNITID AS  NVARCHAR)  END AS Id , ole.ORGLEVELENTRYID AS OleId,  CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.NAME END AS Description , CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.CODE END AS Code FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE = ole.NAME AND old.NAME LIKE 'Principal%' WHERE oas.SHORTNM = ? AND ole.INACTIVE = '1'

SUREPASS_URL=https://sandbox.surepass.io/api/v1/aadhaar-v2/generate-otp

TOKEN=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc0Nzk4NDk1NywianRpIjoiMjA4N2JlZjUtNjdlNC00ZjU1LWFjOWQtYzMyMjU5MTIxYWJmIiwidHlwZSI6ImFjY2VzcyIsImlkZW50aXR5IjoiZGV2LmRvdDFzb2x1dGlvbnNAc3VyZXBhc3MuaW8iLCJuYmYiOjE3NDc5ODQ5NTcsImV4cCI6MTc1MDU3Njk1NywiZW1haWwiOiJkb3Qxc29sdXRpb25zQHN1cmVwYXNzLmlvIiwidGVuYW50X2lkIjoibWFpbiIsInVzZXJfY2xhaW1zIjp7InNjb3BlcyI6WyJ1c2VyIl19fQ.W7u_5kRG40azu6qQTo6TNBw6qrjzhVY6TkFkz6IWbck

SUREPASS_VERIFY_OTP_URL=https://sandbox.surepass.io/api/v1/aadhaar-v2/submit-otp

GET_CONTRACTOR_MASTER_EXPORT=select CODE,CONTRACTORNAME,ADDRESS,MOBILENO,MANAGERNM,EMAILADDR,* from CMSContractorRegistration WHERE UNITID=?

GET_CONTRACTOR_COMPLIANCE_EXPORT=select cpe.CODE as PEID,cr.CODE as CONTRACTORCODE,cpmm.LICENSENUM as LICENSENUMBER,CONVERT(VARCHAR, cpmm.VALIDFROMDT, 103)AS LICENSEVALIDITYSTARTDATE,CONVERT(VARCHAR, cpmm.VALIDTODT, 103) as LICENSEVALIDITYENDDATE,cr.TOTALSTRENGTH as CONTRACTORCOVERAGE,cr.MAXNOEMP as TOTALSTRENGTH,cr.NATUREOFWORK,CONVERT(VARCHAR, cr.PERIODSTARTDATE, 103) as CONTRACTSTARTDATE,CONVERT(VARCHAR, cr.PERIODENDDATE, 103) AS CONTRACTENDDATE,cpmm.ESIWC as ESINUMBER,CONVERT(VARCHAR, cpmm.ESIVALIDFROM, 103) as ESIVALIDFROM ,CONVERT(VARCHAR, cpmm.ESIVALIDTO, 103) as ESIVALIDTO,crp.WCCODE,CONVERT(VARCHAR, crp.WCFROMDTM, 103) as WCFROMDTM,CONVERT(VARCHAR, crp.WCTODTM, 103) AS WCTODTM,cr.PFNUM,CONVERT(VARCHAR, cr.PFAPPLYDT, 103) AS PFAPPLYDT,'' as LaborWelfarefund, '' as ProfessionalTax,cr.GST,'NO'as ISMWApplicable,CONVERT(VARCHAR, cr.CREATEDDTM, 103) AS CREATEDDTM from CMSContractorRegistration  cr JOIN CMSCONTRPEMM cpmm on cpmm.CONTRACTORID=cr.CONTRACTORID join CMSContractorRegPolicy crp on crp.CONTRACTORREGID=cr.CONTRACTORREGID join CMSGENERALMASTER cgm on cgm.GMID=crp.LICENCETYPE join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=cr.UNITID where cgm.GMNAME='WC' and cpe.unitId=?

WORKMEN_EXPORT=select gpm.gatepasstypeid,gpm.GatePassId,gpm.FirstName,gpm.LastName,'' as middleName, '' as shortName,'' as badgeNumber,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') AS hireDate,FORMAT(CAST(gpm.DOB AS DATE), 'yyyy-MM-dd') as birthDate,gpm.MobileNumber as phone1,mu.ContactNumber as phone2,'' as phone3,'' as email, REPLACE(gpm.Address, ',', ' ') AS Address, '' as city,'' as State, '' as postalCode,'' as country,'Active' as employmentStatus,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') as employmentStatusEffectiveDate,mu.userAccount AS ReportingManager,'' as workType,gpm.GatePassId as userAccountName,'Active' as userAccountStatus,'Kronos@531' as userPassword, cpe.ORGANIZATION as company,cpe.CODE as location,'Main Plant' as plantLocation,cgm.GMNAME as department,cgm1.GMNAME as section,'General' as subSection,cc.CODE as contractorCode,'' as home8,'' as home9,wo.SAP_WORKORDER_NUM as category,'' as supervisorId,'' as costCenter,'' as workorder,'' as home4,''as home5, '' as home6,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') as categoryEffectiveDate,cgm2.GMNAME as gender,gpm.AadharNumber,CONCAT(COALESCE(gpm.FirstName, ''), ' ', COALESCE(gpm.LastName, '')) AS aadharName,gpm.RelativeName, REPLACE(gpm.Address, ',', ' ') AS Address,'na' as permanentDistrict,'na' as permanentState,'' as permanentPincode,gpm.IdMark,gpm.UanNumber,CASE     WHEN gpm.MaritalStatus = 'Married' THEN 'MARRIED'  WHEN gpm.MaritalStatus = 'Single' THEN 'UNMARRIED'     ELSE gpm.MaritalStatus END AS MaritalStatus,gpm.Technical,cgm3.GMNAME as academic,'' as shoesize,cgm4.GMNAME as bloodGroup,'Labor Supply' as workmenType,gpm.NatureOfJob,ccwc.WC_CODE as WcEsicNo,'' as panNumber,'xxxxx00000000000000000' as pfNumber,gpm.AccountNumber,'' as bankName,gpm.IfscCode ,'' as future2,'' as future3,'' as future4,'' as future5,'' as future6,'' as future7,'' as future8,'' as futureDate1,'' as futureDate2,'' as futureDate3, '' as futureDate4, '' as futureDate5,ct.NAME as skill,cs.SKILLNM as proLevel,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') as skillDate,'' as cert1,'' as cert1StartDate,'' as cert1EndDate, '' as cert2,'' as cert2StartDate,'' as cert2EndDate,'' as cert3 ,'' as cert3StartDate,'' as cert3EndDate,'' as cert4, '' as cert4StartDate,'' as cert4EndDate from GATEPASSMAIN gpm join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join MASTERUSER mu on mu.UserId=gpm.UpdatedBy join CMSWORKORDER wo on wo.WORKORDERID=gpm.WorkorderId join CMSCONTRACTOR cc on cc.CONTRACTORID=gpm.ContractorId join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo join CMSTRADE ct on ct.TRADEID = gpm.TradeId JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId join CMSGENERALMASTER cgm on cgm.GMID=gpm.DepartmentId join CMSGENERALMASTER cgm1 on cgm1.GMID=gpm.AreaId join CMSGENERALMASTER cgm2 on cgm2.GMID=gpm.Gender join CMSGENERALMASTER cgm3 on cgm3.GMID=gpm.AcademicId join CMSGENERALMASTER cgm4 on cgm4.GMID=gpm.BloodGroupId where gpm.UnitId=? and gpm.GatePassStatus='4' and gpm.GatePassTypeId in ('1','2') union select gpm.gatepasstypeid,gpm.GatePassId,gpm.FirstName,gpm.LastName,'' as middleName, '' as shortName,'' as badgeNumber,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') AS hireDate,FORMAT(CAST(gpm.DOB AS DATE), 'yyyy-MM-dd') as birthDate,gpm.MobileNumber as phone1,mu.ContactNumber as phone2,'' as phone3,'' as email, REPLACE(gpm.Address, ',', ' ') AS Address,'' as city,'' as State, '' as postalCode,'' as country,'Terminated' as employmentStatus,FORMAT(CAST(gpm.dot AS DATE), 'yyyy-MM-dd') as employmentStatusEffectiveDate,mu.userAccount AS ReportingManager,'' as workType,gpm.GatePassId as userAccountName,'Terminated' as userAccountStatus,'Kronos@531' as userPassword, cpe.ORGANIZATION as company,cpe.CODE as location,'Main Plant' as plantLocation,cgm.GMNAME as department,cgm1.GMNAME as section,'General' as subSection,cc.CODE as contractorCode,'' as home8,'' as home9,wo.SAP_WORKORDER_NUM as category,'' as supervisorId,'' as costCenter,'' as workorder,'' as home4,''as home5, '' as home6,FORMAT(CAST(gpm.dot AS DATE), 'yyyy-MM-dd') as categoryEffectiveDate,cgm2.GMNAME as gender,gpm.AadharNumber,CONCAT(COALESCE(gpm.FirstName, ''), ' ', COALESCE(gpm.LastName, '')) AS aadharName,gpm.RelativeName,  REPLACE(gpm.Address, ',', ' ') AS Address,'na' as permanentDistrict,'na' as permanentState,'' as permanentPincode,gpm.IdMark,gpm.UanNumber,CASE     WHEN gpm.MaritalStatus = 'Married' THEN 'MARRIED'  WHEN gpm.MaritalStatus = 'Single' THEN 'UNMARRIED' ELSE gpm.MaritalStatus END AS MaritalStatus,gpm.Technical,cgm3.GMNAME as academic,'' as shoesize,cgm4.GMNAME as bloodGroup,'Labor Supply' as workmenType,gpm.NatureOfJob,ccwc.WC_CODE as WcEsicNo,'' as panNumber,'xxxxx00000000000000000' as pfNumber,gpm.AccountNumber,'' as bankName,gpm.IfscCode ,'' as future2,'' as future3,'' as future4,'' as future5,'' as future6,'' as future7,'' as future8,'' as futureDate1,'' as futureDate2,'' as futureDate3, '' as futureDate4, '' as futureDate5,ct.NAME as skill,cs.SKILLNM as proLevel,FORMAT(CAST(GETDATE() AS DATE), 'yyyy-MM-dd') as skillDate,'' as cert1,'' as cert1StartDate,'' as cert1EndDate, '' as cert2,'' as cert2StartDate,'' as cert2EndDate,'' as cert3 ,'' as cert3StartDate,'' as cert3EndDate,'' as cert4, '' as cert4StartDate,'' as cert4EndDate from GATEPASSMAIN gpm join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join MASTERUSER mu on mu.UserId=gpm.UpdatedBy  join CMSWORKORDER wo on wo.WORKORDERID=gpm.WorkorderId join CMSCONTRACTOR cc on cc.CONTRACTORID=gpm.ContractorId join CMSCONTRACTOR_WC ccwc on ccwc.WCID = gpm.WcEsicNo join CMSTRADE ct on ct.TRADEID = gpm.TradeId JOIN CMSSKILL cs on cs.SKILLID = gpm.SkillId join CMSGENERALMASTER cgm on cgm.GMID=gpm.DepartmentId join CMSGENERALMASTER cgm1 on cgm1.GMID=gpm.AreaId join CMSGENERALMASTER cgm2 on cgm2.GMID=gpm.Gender join CMSGENERALMASTER cgm3 on cgm3.GMID=gpm.AcademicId join CMSGENERALMASTER cgm4 on cgm4.GMID=gpm.BloodGroupId where gpm.UnitId=? and gpm.GatePassStatus='4' and gpm.GatePassTypeId in ('1','2')

GET_WORKFLOWTYPE=select distinct cwt.WorkflowType from CMSWORKFLOWTYPE cwt join CMSAPPROVERHIERARCHY cah on cah.WorkFlowTypeId=cwt.WorkFlowTypeId join CMSGENERALMASTER cgm on cgm.GMID = cwt.ModuleId join CMSGMTYPE cgt on  cgt.GMTYPEID=cgm.GMTYPEID  where cgt.GMTYPE like 'MODULE' and cgm.GMNAME like ? and cwt.UnitId=?

GET_BVR_FOR_CREATOR=select wcw.WCTransID,wcw.UnitCode,wcw.ContractorCode,wcw.ContractorName,cwo.SAP_WORKORDER_NUM as WorkOrderNumber ,cgm.GMNAME as Services,wcw.StartDate,wcw.EndDate,wcw.Status from cmswagecostworkflow wcw join CMSGENERALMASTER cgm on cgm.GMID =wcw.Services join CMSWORKORDER cwo on cwo.WORKORDERID=wcw.WorkOrderNumber where wcw.UnitId=? and wcw.ContractorId=? and wcw.CreatedBy=?

SAVE_BILL_STATUSLOG=INSERT INTO BILLSTATUSLOG ([TransactionId],[Status],[Comments],[UpdatedBy],[LastUpdatedDate]) VALUES  (?,?,?,?,GETDATE())

GET_BVR_FOR_SEQUENTIAL_APPROVER=select wcw.WCTransID,wcw.UnitCode,wcw.ContractorCode,wcw.ContractorName,cwo.SAP_WORKORDER_NUM as WorkOrderNumber ,cgm.GMNAME as Services,wcw.StartDate,wcw.EndDate,wcw.Status from cmswagecostworkflow wcw join CMSGENERALMASTER cgm on cgm.GMID =wcw.Services join CMSWORKORDER cwo on cwo.WORKORDERID=wcw.WorkOrderNumber JOIN CMSAPPROVERHIERARCHY cah   ON  cah.ACTION_ID =wcw.ActionId AND cah.[Index] = (SELECT COUNT(DISTINCT gas.BILLApprovalStatusId) + 1 FROM BILLAPPROVALSTATUS gas JOIN CMSAPPROVERHIERARCHY cah1 ON gas.RoleId = cah1.ROLE_ID WHERE gas.status = 4 AND gas.ActionId = wcw.ActionId  AND gas.transactionId = wcw.WCTransID  )LEFT JOIN BILLAPPROVALSTATUS gas  ON wcw.WCTransID = gas.transactionId AND cah.ROLE_ID = gas.RoleId AND gas.ActionId = wcw.ActionId  WHERE wcw.status = '3'    AND wcw.ContractorId = ? AND wcw.UnitId = ?  AND gas.TransactionId IS NULL AND cah.ROLE_ID = ? AND wcw.ActionId=?

GET_BVR_FOR_PARALLEL_APPROVER=select wcw.WCTransID,wcw.UnitCode,wcw.ContractorCode,wcw.ContractorName,cwo.SAP_WORKORDER_NUM as WorkOrderNumber ,cgm.GMNAME as Services,wcw.StartDate,wcw.EndDate,wcw.Status from cmswagecostworkflow wcw join CMSGENERALMASTER cgm on cgm.GMID =wcw.Services join CMSWORKORDER cwo on cwo.WORKORDERID=wcw.WorkOrderNumber  join CMSAPPROVERHIERARCHY cah     ON  cah.ACTION_ID =wcw.ActionId left join  BILLAPPROVALSTATUS gas ON gas.TransactionId = wcw.WCTransID AND gas.RoleId = ? and gas.ActionId=? where (cah.ROLE_ID=?) and gas.TransactionId IS NULL and gpm.GatePassStatus='3' and wcw.ActionId=? and wcw.ContractorId=? and wcw.UnitId=?

GET_BVR_VIEW=select wcw.WCTransID,wcw.UnitCode,wcw.UnitName,wcw.ContractorCode,wcw.ContractorName,cwo.SAP_WORKORDER_NUM as WorkOrderNumber ,cgm.GMNAME as Services,wcw.StartDate,wcw.EndDate,wcw.Status ,cgm1.GMNAME as BillType,wcw.WOValidFrom,wcw.WOValidTo,wcw.ActionPlan,wcw.Comments from cmswagecostworkflow wcw join CMSGENERALMASTER cgm on cgm.GMID =wcw.Services join CMSGENERALMASTER cgm1 on cgm1.GMID=wcw.BillType join CMSWORKORDER cwo on cwo.WORKORDERID=wcw.WorkOrderNumber where wcw.WCTransID=?

AADHAR_EXISTS=SELECT COUNT(*) AS totalCount FROM GATEPASSMAIN GPM WHERE gpm.AadharNumber = ?  and gpm.transactionId != ? ;

GET_WAGE_DETAILS_EXPORT_DATA=select cpe.CODE as PECODE,cr.CODE as CONTRACTORCODE,gpm.GatePassId as WORKMENID,gpm.AadharNumber as AADHARNUMBER,gpm.Basic as BASIC,gpm.DA,gpm.HRA as HRA,'0' as CONVEYANCEALLOWANCE, '0' as SPECIALALLOWANCE,'0' as SKILLALLOWANCE,gpm.WashingAllowance as WASHINGALLOWANCE,gpm.UniformAllowance as UNIFORMALLOWANCE,'0'as HARDSHIPALLOWANCE,gpm.updatedDate as EFFECTIVEDATE from CMSContractorRegistration  cr JOIN GATEPASSMAIN gpm on gpm.CONTRACTORID=cr.CONTRACTORID join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=cr.UNITID where  cpe.unitId=?

GET_ALL_CONTR_RENEWAL_LIST = SELECT CONTRACTORREGID,UNITCODE,CODE,CONTRACTORNAME,STATUS,TYPE FROM CMSContractorRegistration where TYPE='Renew';

GET_CONTRACTOR_DETAILS_FOR_RENEWAL=select  CONTRACTORID,UNITID,CONTRACTORNAME,CODE,EMAILADDR,MOBILENO,AADHARNUM,AADHARDOCNAME,PANNUM,PANDOCNAME,GST,ADDRESS,PFNUM,NATUREOFWORK,MANAGERNM,LOCOFWORK,TOTALSTRENGTH,MAXNOEMP,PERIODSTARTDATE,PERIODENDDATE,CONTTYPE,SERVICES,ESICREGNO from CMSContractorRegistration WHERE   CONTRACTORID=? AND UNITID=?

GET_NEXT_VERSION_OF_DOCUMENT=SELECT MAX(version) FROM principal_employer_documents WHERE principal_employer_id = ? AND doc_type = ?;

SAVE_PE_DOCUMENTS=INSERT INTO principal_employer_documents (principal_employer_id, file_name, version, upload_date, uploaded_by, doc_type, file_path) VALUES (?, ?, ?, ?, ?, ?, ?);

GET_DOCS_BY_EMPLOYERID=SELECT * FROM principal_employer_documents WHERE principal_employer_id = ? ORDER BY doc_type, version DESC;

GET_ALL_DOCTYPES=SELECT REPORTNAME FROM PeDocConfigKronos ORDER BY REPORTNAME;

GET_DOCUMENT_BY_ID=SELECT * FROM principal_employer_documents WHERE id = ?;

FETCH_PE_DOCUMENTS=SELECT REPORTNAME FROM PeDocConfigKronos;

SAVE_DOCUMENT=INSERT INTO PeDocConfigKronos (REPORTNAME) VALUES (?);

FIND_BUID_BY_UNITID=SELECT BUID FROM CMSBUUnitMapping WHERE UnitID = ?;

INSERT_WORKFLOWTYPE=INSERT INTO GATEPASSWORKFLOWTYPE (BusinessTypeId, WorkflowType, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate) VALUES (?, ?, ?, GETDATE(), ?, GETDATE());