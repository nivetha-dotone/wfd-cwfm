GET_ALL_PES=select cpe.UNITID,cpe.NAME,cpe.ADDRESS,cpe.MANAGERNAME,cpe.MANAGERADDRS,cpe.BUSINESSTYPE,cpe.MAXWORKMEN,cpe.MAXCNTRWORKMEN,cpe.BOCWAPPLICABILITY,cpe.ISMWAPPLICABILITY, cpe.CODE,cpe.ORGANIZATION,cpe.PFCODE,cpe.LICENSENUMBER,cpe.WCNUMBER,cpe.ESICNUMBER,cpe.PTREGNO,cpe.LWFREGNO,cpe.FACTORYLICENCENUMBER,cpe.ISRCAPPLICABLE,cpe.RCNUMBER,cpe.ATTACHMENTNM,cpe.STATEID,cpe.ISACTIVE from ORGLEVELENTRY ole join ORGLEVELDEF old on old.ORGLEVELDEFID=ole.ORGLEVELDEFID join OLACCTSETMM oasm on oasm.ORGLEVELENTRYID=ole.ORGLEVELENTRYID join ORGACCTSET oas on oas.ORGACCTSETID=oasm.ORGACCTSETID join CMSPRINCIPALEMPLOYER cpe on cpe.CODE = ole.name where oas.SHORTNM=? and ole.INACTIVE='1' and old.NAME like 'Principal%'    

GET_PE_BY_UNITID=select UNITID,NAME,ADDRESS,MANAGERNAME,MANAGERADDRS,BUSINESSTYPE,MAXWORKMEN,MAXCNTRWORKMEN,BOCWAPPLICABILITY,ISMWAPPLICABILITY,  CODE,ORGANIZATION,PFCODE,LICENSENUMBER,WCNUMBER,ESICNUMBER,PTREGNO,LWFREGNO,FACTORYLICENCENUMBER,ISRCAPPLICABLE,RCNUMBER,ATTACHMENTNM,STATEID,ISACTIVE from CMSPRINCIPALEMPLOYER WHERE UNITID=?

GET_ALL_CONTRACTORS = SELECT CONTRACTORREGID,UNITCODE,CODE,CONTRACTORNAME,STATUS,TYPE FROM CMSContractorRegistration ;
   
SAVE_INSERT_CONTRACTOR_DETAILS = INSERT INTO CMSContractorRegistration(CONTRACTORID,CONTRACTORREGID,UNITID,CODE,MANAGERNM,LOCOFWORK,TOTALSTRENGTH,MAXNOEMP,PFNUM,NATUREOFWORK,PERIODSTARTDATE,PERIODENDDATE,CONTTYPE,RCVALIDATED)values((select isnull(max(CONTRACTORID),0)+1 from CMSContractorRegistration),?,?,?,?,?,?,?,?,?,?,?,?,?);

GET_CONTRACTOR_DETAILS = SELECT CONTRACTORREGID,UNITCODE,UNITNAME,CODE,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTYPE FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

GET_ALL_CONTRACTOR_DETAIL_VIEW =SELECT CONTRACTORREGID,UNITID,CODE,MANAGERNM,LOCOFWORK,TOTALSTRENGTH,MAXNOEMP,PFNUM,NATUREOFWORK,PERIODSTARTDATE,PERIODENDDATE,CONTTYPE,RCVALIDATED,MAINCONTRACTOR FROM CMSContractorRegistration where CONTRACTORREGID=?;

GET_ALL_RENEWAL_LIST_CONTRACTORS = SELECT CONTRACTORREGID,UNITCODE,CODE,CONTRACTORNAME,STATUS FROM CMSContractorRegistration;

GET_ALL_CONTRACTOR_ADD_DETAIL_VIEW=SELECT ccrp.WONUMBER,cnoj.JOB_NAME,ccrp.LICENCETYPE,ccrp.WCCODE,ccrp.WCTOTAL,ccrp.WCFROMDTM,ccrp.WCTODTM,ccrp.ATTACHMENTNAME FROM CMSContractorRegPolicy ccrp join CMSNATURE_OF_JOB as cnoj on ccrp.NATUREOFID=cnoj.JOB_ID ;

GET_RENEWAL_CONTRACTORS_VIEW=SELECT CONTRACTORREGID,UNITCODE,UNITNAME,CONTRACTORID,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTTYPE FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

SET_RENEWAL_DETAILS=insert into CMSContractorRegistration(CONTRACTORID,CONTRACTORREGID,UNITCODE,UNITNAME,CONTRACTORID,CONTRACTORNAME,MANAGERNM,LOCOFWORK,SUPERVISORNAME,PFNUM,EMAILADDR,MOBILENO,ESICREGNO,CONTRACTVALIDTILL,SERVICES,CONTTYPE) values((select isnull(max(CONTRACTORID),0)+1 from CMSContractorRegistration),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

GET_RENEW_CONTRACTOR_ADD_DETAIL_VIEW=select LICENCETYPE,WCCODE,WCTOTAL,WCFROMDTM,WCTODTM,ATTACHMENTNAME,ISGLOBAL,SUBCONTAPPL from CMSContractorRegPolicy;

SET_UNIQUE_REGISTRATION_ID=SELECT COUNT(*) FROM CMSContractorRegistration WHERE CONTRACTORREGID=?;

GET_MASTERUSER_BY_USERNAME_AND_PASSWROD=select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.UserAccount,mu.ContactNumber,mu.Status,mu.Password from MasterUser mu where mu.UserAccount=? and mu.Password=?

GET_MASTERUSER_BY_USERACCOUNT =select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.userAccount,mu.ContactNumber,mu.Status,mu.Password  from MasterUser mu where mu.userAccount=? 

GET_ALL_PRINCIPAL_EMPLOYER=select cpe.UNITID, cpe.NAME from USERAUTHRELINFO uari  join CMSPRINCIPALEMPLOYER cpe on uari.AuthorizationValue=cpe.UNITID and uari.IsActive='A' where uari.UserId=? and uari.AuthorizationOn='unitId'					 	

GET_CONTRACOTR_BY_ID=SELECT * FROM CMSCONTRACTOR WHERE CONTRACTORID = ?

GET_ALL_WORKORDER_BY_PE_AND_CONT=select cwo.WORKORDERID,cwo.NAME from CMSWORKORDER cwo  where UNITID=? and CONTRACTORID=?  union  select cwo.WORKORDERID,cwo.NAME from CMSWORKORDER cwo  join CMSSUBCONTRACTOR csc on csc.WORKORDERID= cwo.WORKORDERID  where csc.SUBCONTRACTORID=?

GET_ALL_WORKORDER_BY_CONT=SELECT WORKORDERID, SAP_WORKORDER_NUM, CONTRACTORID, VALIDFROM, VALIDDT, UNITID,TYPEID,SECID,DEPID,STATUS FROM CMSWORKORDER WHERE  UNITID = ?  AND CONTRACTORID = ? 

GET_CONTRPEMM_BY_PE_AND_CONT=SELECT * FROM CMSCONTRPEMM WHERE CONTRACTORID = ? AND UNITID = ?

GET_MAPPING_BY_PE_CONT=SELECT * FROM CMSContractor_WC WHERE CONTRACTORID = ? AND UNITID = ? AND LICENCE_TYPE = ?

GET_WO_BY_ID=select * from CMSWORKORDER where WORKORDERID=?

GET_BILL_LIST=select WCTransID,UnitCode,ContractorCode,ContractorName,WorkOrderNumber,StartDate,EndDate,Status,Services from CMSWageCostWorkFlow;

GET_BILL_DETAIL_VIEW=select wcw.WCTransID,wcw.UnitCode,wcw.UnitName,wcw.ContractorCode,wcw.ContractorName,wcw.StartDate,wcw.EndDate,wcw.WorkOrderNumber,bty.BILLTYPENAME,wcw.WOValidFrom,wcw.WOValidTo from CMSWageCostWorkFlow wcw join CMSBVRBILLTYPES bty on bty.BILLTYPEID=wcw.BillType where wcw.WCTransID=?;


GET_BILL_REPORTS_DETAIL_VIEW=select MRReport,BVRReport,BonusReport,ExtraHoursReport,WCReport,FormA,FormB,FormC,FormD,EcrPF,PFChallan,EcrESIC,ESICChallan,BankStatement,AnnualReturn,BonusRegister,LWFChallan,PTChallan,UserAttachment1,UserAttachment2,UserAttachment3 from CMSWageCostDocuments WHERE WCTransID=?

GET_BILL_HR_CLEARANCE_VIEW=select LLStatus,LLCopy,LLValidTo,EmpReg,WageReg,LoanRecovery,AttenReg,AnnualReturn,PFSlip,PFSlipDate,PFEcr,PFECRDate,ESICSlip,ESICSlipDate,ESICEcr,ESICECRDate,BankStmntStatus,PTaxChallan,PTaxDate,AccidentPolicy,AccidentPolicyValidTo,LaborWelfare,LabWelFundActDate,BonusReg,LeaveWihtWages,PreMonWage,PreMonWageDate,ActionPlan  from CMSWageCostHRCheckList where WCTransID=?;

GET_BILL_PRECOMMENTS_VIEW=SELECT STUFF((SELECT RA.PersonNumber + ':' + CAST(a1.CommentText AS VARCHAR(1000)) + '/ '  FROM CMSWageCostComments a1 INNER JOIN CMSWageCostApproval RA ON a1.Approvalid = RA.Approvalid  WHERE RA.WCTransID = wc.WCTransID  ORDER BY a1.Approvalid  FOR XML PATH ('')), 1, 0, '') AS precomments FROM CMSWageCostWorkFlow wc WHERE wc.WCTransID =?;

GET_ALL_CONTRACTOR_BY_PE=select old.NAME,ccp.contractorid,cc.NAME as contractorname,cc.CODE as contractorcode,cc.ADDRESS as contractoraddress from ORGLEVELENTRY ole join ORGLEVELDEF old on old.ORGLEVELDEFID=ole.ORGLEVELDEFID join OLACCTSETMM oasm on oasm.ORGLEVELENTRYID=ole.ORGLEVELENTRYID join ORGACCTSET oas on oas.ORGACCTSETID=oasm.ORGACCTSETID JOIN CMSCONTRACTOR cc ON cc.CODE=ole.NAME join CMSCONTRPEMM ccp on ccp.CONTRACTORID=cc.CONTRACTORID where oas.SHORTNM=? and ole.INACTIVE='1' and  old.NAME like 'Contractor' and ccp.UNITID=?

GET_PERSON_ORG_LEVEL=SELECT old.NAME AS LevelDef, COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN CAST(cpe.UNITID AS  NVARCHAR) END,CASE WHEN old.NAME LIKE 'Dept' THEN cgm.GMID END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMID END,CASE WHEN old.NAME LIKE 'Contractor' THEN CAST(cc.ContractorId AS NVARCHAR) END) AS Id , ole.ORGLEVELENTRYID AS OleId,  COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.NAME END,CASE WHEN old.NAME LIKE 'Dept' THEN cgm.GMNAME END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMNAME END,CASE WHEN old.NAME LIKE 'Contractor' THEN cc.NAME END) AS Description FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE = ole.NAME AND old.NAME LIKE 'Principal%' LEFT JOIN CMSGENERALMASTER cgm ON cgm.GMNAME = ole.NAME AND old.NAME LIKE 'Dept' LEFT JOIN CMSGENERALMASTER cgm1 ON cgm1.GMNAME = ole.NAME AND old.NAME LIKE 'Area' LEFT JOIN CMSCONTRACTOR cc ON cc.CODE = ole.NAME AND old.NAME LIKE 'Contractor' WHERE oas.SHORTNM = ? AND ole.INACTIVE = '1'

 GET_ALL_CMSGENERALMASTER=select cgm.GMID,cgm.GMNAME, cgt.GMTYPE from CMSGENERALMASTER cgm join CMSGMTYPE cgt on cgt.GMTYPEID=cgm.GMTYPEID 
 
 GET_ALL_TRADES_BY_PE=select ct.TRADEID,ct.NAME  from CMSTRADE ct where ct.UNITID=?
 
 
 GET_ALL_WC=select ccwc.WCID,ccwc.WC_CODE from CMSCONTRACTOR_WC ccwc where ccwc.UNITID=? and ccwc.CONTRACTORID=?  AND ccwc.WC_TO_DTM > GETDATE()
 
 GET_WORKFLOW_TYPE_BY_PE=select distinct gpwft.WorkflowType from CMSPRINCIPALEMPLOYER CPE  join GATEPASSWORKFLOWTYPE gpwft on gpwft.BusinessTypeId = cpe.BUSINESSTYPE WHERE CPE.UNITID=? and gpwft.WorkflowType in ('1','2','3')
 
 GET_DOT_TYPE_BY_PE =select distinct gpwft.WorkflowType  from CMSPRINCIPALEMPLOYER CPE join GATEPASSWORKFLOWTYPE gpwft on gpwft.BusinessTypeId = cpe.BUSINESSTYPE  WHERE CPE.UNITID=? and gpwft.WorkflowType not in ('1','2','3')
 
 GET_ALL_SKILL=select cs.SKILLID,cs.SKILLNM,cs.ISACTIVE from CMSSKILL cs
 
 GET_ALL_GATE_PASS_FOR_CREATOR=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus  from GATEPASSMAIN gpm  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId  join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT)  where gpm.UpdatedBy=? and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=? union select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm  left JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId  left join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId left join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and gpm.GatePassTypeId=?

GET_ALL_GATE_PASS_FOR_SEQUENTIAL_APPROVER=SELECT gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME AS ContractorName,    gpm.ContractorId AS VendorCode,    cpe.NAME AS UnitName,    gpm.GatePassStatus FROM GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID = gpm.ContractorId JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.UNITID = gpm.UnitId JOIN CMSGENERALMASTER cgm ON cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT)JOIN GATEPASSAPPROVERHIERARCHY gah   ON gpm.GatePassTypeId = gah.ACTION_ID   AND gah.[Index] = (SELECT COUNT(DISTINCT gas.GatePassApprovalStatusId) + 1 FROM GATEPASSAPPROVALSTATUS gas JOIN GATEPASSAPPROVERHIERARCHY gai1 ON gas.RoleId = gai1.ROLE_ID WHERE gas.status = 4 AND gas.GatePassTypeId = gpm.GatePassTypeId        AND gas.transactionId = gpm.transactionId  )LEFT JOIN GATEPASSAPPROVALSTATUS gas   ON gpm.transactionId = gas.transactionId   AND gah.ROLE_ID = gas.RoleId    AND gas.GatePassTypeId = gpm.GatePassTypeId  WHERE gpm.GatePassStatus = '3'    AND gpm.departmentid = ?   AND gpm.UnitId = ?  AND gas.TransactionId IS NULL    AND gah.ROLE_ID = ?  AND gpm.GatePassTypeId=?

GET_ALL_GATE_PASS_FOR_PARALLEL_APPROVER=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) join GATEPASSAPPROVERHIERARCHY gah     ON gpm.GatePassTypeId = gah.ACTION_ID left join  GATEPASSAPPROVALSTATUS gas ON gas.TransactionId = gpm.TransactionId AND gas.RoleId = ? and gas.GatePassTypeId=? where (gah.ROLE_ID=?) and gas.TransactionId IS NULL and gpm.GatePassStatus='3' and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=?

GET_APPROVER_INFO_BY_GPTID=SELECT gah.hierarchy_id,gah.[Index],gah.Role_Name  FROM GATEPASSAPPROVERHIERARCHY gah WHERE gah.Action_id=? and gah.Role_Name not in ('Contractor') ORDER BY [Index] ASC

GET_APPROVAL_STATUS_BY_TRNSID = SELECT GatePassApprovalStatusId,TransactionId,GatePassId,UserId,UserRole,Status,Comments,LastUpdatedDate,GatePassTypeId  FROM GATEPASSAPPROVALSTATUS where TransactionId=? and GatePassTypeId='1'

GET_ALL_GATE_PASS_ACTION_FOR_CREATOR = select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and gpm.departmentid=? and gpm.UnitId=? and (gpm.GatePassTypeId=? and gpm.GatePassStatus=?) or gpm.GatePassTypeId=? 


GET_ALL_EIC=SELECT DISTINCT  mu.UserId,mu.userAccount,CONCAT(COALESCE(mu.FirstName, ''), ' ', COALESCE(mu.LastName, '')) AS FullName,urm.RoleId,cgm.GMNAME AS RoleName FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID JOIN MASTERUSER mu ON mu.userAccount = oas.SHORTNM JOIN UserRoleMapping urm ON urm.UserId = mu.UserId JOIN CMSGENERALMASTER cgm ON cgm.GMID = urm.RoleId LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE  = ole.NAME AND old.NAME LIKE 'Principal%' WHERE cgm.GMNAME   IN ('EIC')  and ((old.NAME LIKE 'Dept' AND ole.NAME = ? )  OR  (cpe.UNITID=?)) GROUP BY mu.UserId, mu.userAccount,mu.FirstName,  mu.LastName, urm.RoleId, cgm.GMNAME HAVING COUNT(DISTINCT old.NAME) = 2 order by userid 


LAST_APPROVER=select Role_Name FROM GATEPASSAPPROVERHIERARCHY WHERE  [Index] = (SELECT MAX([Index]) FROM GATEPASSAPPROVERHIERARCHY  WHERE ACTION_ID = ?)

GET_ALL_PES_FOR_ADMIN=select cpe.UNITID,cpe.NAME,cpe.ADDRESS,cpe.MANAGERNAME,cpe.MANAGERADDRS,cpe.BUSINESSTYPE,cpe.MAXWORKMEN,cpe.MAXCNTRWORKMEN,cpe.BOCWAPPLICABILITY,cpe.ISMWAPPLICABILITY, cpe.CODE,cpe.ORGANIZATION,cpe.PFCODE,cpe.LICENSENUMBER,cpe.WCNUMBER,cpe.ESICNUMBER,cpe.PTREGNO,cpe.LWFREGNO,cpe.FACTORYLICENCENUMBER,cpe.ISRCAPPLICABLE,cpe.RCNUMBER,cpe.ATTACHMENTNM,cpe.STATEID,cpe.ISACTIVE from CMSPRINCIPALEMPLOYER cpe

GET_ALL_CONTR_FOR_ADMIN=select ccp.contractorid,cc.NAME as contractorname,cc.CODE as contractorcode,cc.ADDRESS as contractoraddress from CMSCONTRPEMM ccp join CMSCONTRACTOR cc on ccp.CONTRACTORID=cc.CONTRACTORID where ccp.UNITID=?
  
 #new queries#

GET_BILL_EIC_VIEW=select VP.PERSONNUM+' - '+vp.FULLNM as AvailableEIC from PERSON VP where vp.PERSONNUM in (select wca.PersonNumber from CMSWageCostApproval wca where wca.WCTransID=? and wca.StepNumber=1 and wca.DeletedSwitch=0)

##COMMON DAO IMPL##

GET_MAPPINGS_BY_CONTRACTOR_ID_UNITID_LICENSETYPE=SELECT * FROM CMSContractor_WC WHERE CONTRACTORID = ? AND UNITID = ? AND LICENCE_TYPE = ?;

GET_WORKORDER_BY_ID=SELECT * FROM workorder WHERE id = ?;

GET_FINDBY=SELECT * FROM cmsgmtype WHERE id = ?;

GET_FIN_GMDBY_ID=SELECT GMNAME, GMDESCRIPTION FROM CMSGeneralMaster WHERE GMID = ?;

GET_CMS_GENERALMASTER_OPTION_BY_NAME=SELECT gm.* FROM CmsGeneralMaster gm JOIN CMSGMType gmt ON gm.gm_type_id = gmt.id WHERE gmt.gmType = ?;

FIND_GMTYPE_NAME=SELECT * FROM CMSGMTYPE WHERE GMTYPE = ?;

FIND_MASTER_NAME_AND_VALUE=SELECT * FROM CmsGeneralMaster WHERE gmname = ? AND gmdescription = ?;

CMS_GENERAL_MASTER_DUPLICATE=SELECT COUNT(*) FROM CmsGeneralMaster WHERE gmname = ? AND gmdescription = ?;

GET_ALL_GMTYPES=SELECT * FROM CMSGMType;

SAVE_GMTYPE=INSERT INTO CMSGMTYPE (GMTYPE) VALUES (?);

DEPENDENCY_CHECK_SQL=SELECT COUNT(*) FROM CmsGeneralMaster WHERE gmTypeId = ?;

DEPENDENCY_UPDATE_SQL=DELETE FROM CMSGMType WHERE gmTypeId = ?;

GET_ALL_CMS_GENERAL_MASTER=SELECT * FROM CmsGeneralMaster;

SAVE_CMS_GENERAL_MASTER=INSERT INTO CmsGeneralMaster (gmname, gmdescription, gmTypeId) VALUES (?, ?, ?);

DELETE_CMS_GENERAL_MASTER=DELETE FROM CmsGeneralMaster WHERE gmId = ?;

FIND_CMS_GENERAL_MASTER_BY_ID=SELECT * FROM CmsGeneralMaster WHERE gmId = ?;

GET_ALL_ROLE_RIGHTS=SELECT rr.ROLE_RIGHT_ID, rr.ROLE_ID, rr.PAGE_ID, rr.ADD_RIGHTS, rr.EDIT_RIGHTS, rr.DELETE_RIGHTS, rr.IMPORT_RIGHTS, rr.EXPORT_RIGHTS, rr.VIEW_RIGHTS, rr.LIST_RIGHTS, rr.ENABLED_FLAG, rr.DELETED_FLAG, rr.CREATED_BY, rr.CREATION_DATE, rr.LAST_UPDATED_BY, rr.LAST_UPDATED_DATE, r.GMTYPEID as roleTypeId, p.GMTYPEID as pageTypeId, r.GMNAME as roleName, p.GMNAME as pageName FROM CMSRoleRights rr JOIN CMSGeneralMaster r ON rr.ROLE_ID = r.GMID JOIN CMSGeneralMaster p ON rr.PAGE_ID = p.GMID JOIN CMSGMTYPE rType ON r.GMTYPEID = rType.GMTYPEID JOIN CMSGMTYPE pType ON p.GMTYPEID = pType.GMTYPEID WHERE rType.GMTYPE = 'ROLE' AND pType.GMTYPE = 'PAGE' and rr.DELETED_FLAG=0 ;

GET_ALL_ROLE_RIGHTS_BY_ID=SELECT * FROM CMSRoleRights WHERE roleId = ?;

SAVE_ROLE_RIGHTS=INSERT INTO CMSROLERIGHTS (ROLE_ID, PAGE_ID, ADD_RIGHTS, EDIT_RIGHTS, DELETE_RIGHTS, IMPORT_RIGHTS, EXPORT_RIGHTS, VIEW_RIGHTS, LIST_RIGHTS, ENABLED_FLAG, DELETED_FLAG, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATED_DATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

UPDATE_SAVE_ROLE_RIGHTS=UPDATE CMSROLERIGHTS SET ADD_RIGHTS = ?, EDIT_RIGHTS = ?, DELETE_RIGHTS = ?, IMPORT_RIGHTS = ?, EXPORT_RIGHTS = ?, VIEW_RIGHTS = ?, LIST_RIGHTS = ?, ENABLED_FLAG = ?, DELETED_FLAG = ?, CREATED_BY = ?, CREATION_DATE = ?, LAST_UPDATED_BY = ?, LAST_UPDATED_DATE = ? WHERE ROLE_RIGHT_ID = ?;

GET_GM_BY_TYPE=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_GM_BY_ID=SELECT * FROM CmsGeneralMaster WHERE gmId = ?;

GET_ALL_PAGES=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_ALL_SECTIONS=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?

GET_ALL_ROLES=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = ?;

GET_ROLES=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = ?;

GET_PAGES=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = ?;

GET_PAGES_BY_ROLE=SELECT gm.* FROM CmsGeneralMaster gm WHERE gm.gmType = 'PAGE' AND gm.roleId = ?;

GET_ALL_STATES=SELECT * FROM CMSSTATE;

GET_GENERAL_MASTERS_WITH_TYPE_NAME=SELECT g.gmId, g.gmName, g.GMDESCRIPTION AS gmDescription, t.GMTYPE AS gmTypeName FROM CMSGENERALMASTER g JOIN CMSGMTYPE t ON g.gmTypeId = t.gmTypeId WHERE t.gmTypeId = ? and g.ISACTIVE=1 ;

DELETE_GM_DATA_BY_ID=UPDATE CMSGENERALMASTER SET ISACTIVE = 0,UPDATEDTM=GETDATE() WHERE gmId = ?;

SAVE_GENERAL_MASTER=INSERT INTO CMSGENERALMASTER (gmTypeId, gmName, GMDESCRIPTION,ISACTIVE,UPDATEDBY) VALUES (?, ?, ?,1,?);

CHECK_DUPLICATE_ROLE_RIGHTS=SELECT COUNT(*) FROM CMSRoleRights WHERE role_id = ? AND page_id = ? and DELETED_FLAG=0;

GET_ROLES_BY_USER_ID=SELECT gm.* FROM UserRoleMapping urm INNER JOIN CmsGeneralMaster gm ON urm.RoleId = gm.gmId WHERE urm.UserId = ?;

GET_ROLES_USER_ID=SELECT gm.* FROM UserRoleMapping urm INNER JOIN CmsGeneralMaster gm ON urm.RoleId = gm.gmId WHERE urm.UserId = ?;

GET_PAGES_BY_ROLES_ID=SELECT gm.* FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0;

GET_PAGES_ROLES_ID=SELECT gm.* FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0;

GET_AVAILABLE_PAGES_FOR_SECTION=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE' AND gm.gmId NOT IN ( SELECT sp.page_id   FROM CMSSectionPage sp WHERE sp.section_id = ? AND sp.is_active = 0);

GET_SELECTED_PAGES_FOR_SECTIONS=SELECT gm.* FROM CmsGeneralMaster gm INNER JOIN CMSGMType gmt ON gm.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE' AND gm.gmId IN (SELECT sp.page_id  FROM CMSSectionPage sp   WHERE sp.section_id = ? AND sp.is_active = 0);

SAVE_SECTION_SELECT_SQL=SELECT COUNT(*) FROM CMSSectionPage WHERE section_id = ? AND page_id = ?;

SAVE_SECTION_UPDATE_SQL=UPDATE CMSSectionPage SET is_active = 0, updated_by = ? WHERE section_id = ? AND page_id = ?;

SAVE_SECTION_INSERT_SQL=INSERT INTO CMSSectionPage (section_id, page_id, is_active, created_by, updated_by) VALUES (?, ?, ?, ?, ?);

GET_ALL_SECTIONS_WITH_PAGES=SELECT sp.section_id AS sectionId, gm_section.gmName AS sectionName, gm_page.gmId AS pageId, gm_page.gmName AS pageName ,gm_page.GMDESCRIPTION as pageUrl, gm_section.GMDESCRIPTION AS sectionIcon FROM CMSSectionPage sp LEFT JOIN CmsGeneralMaster gm_page ON sp.page_id = gm_page.gmId LEFT JOIN CmsGeneralMaster gm_section ON sp.section_id = gm_section.gmId LEFT JOIN CMSGMType gmt ON gm_page.gmTypeId = gmt.gmTypeId WHERE gmt.gmType = 'PAGE' AND sp.is_active = 0;

GET_SECTIONS_BY_ROLEID=SELECT sp.section_id AS sectionId, gm_section.gmName AS sectionName,gm_page.gmId AS pageId,gm_page.gmName AS pageName, gm_page.GMDESCRIPTION AS pageUrl,gm_section.GMDESCRIPTION AS sectionIcon FROM CMSSectionPage sp LEFT JOIN CmsGeneralMaster gm_page ON sp.page_id = gm_page.gmId LEFT JOIN CmsGeneralMaster gm_section ON sp.section_id = gm_section.gmId LEFT JOIN CMSGMType gmt ON gm_page.gmTypeId = gmt.gmTypeId LEFT JOIN CMSROLERIGHTS rpm ON sp.page_id = rpm.page_id WHERE gmt.gmType = 'PAGE' AND sp.is_active = 0 AND rpm.role_id = ?;

GET_PAGE_ID_BY_ROLE_ID=SELECT gm.gmId FROM CMSROLERIGHTS rr INNER JOIN CMSGENERALMASTER gm ON rr.PAGE_ID = gm.gmId WHERE rr.ROLE_ID = ? AND rr.ENABLED_FLAG = 1 AND rr.DELETED_FLAG = 0
 
HAS_PAGE_ACCESS_FOR_ROLE=SELECT COUNT(*) FROM CMSROLERIGHTS WHERE ROLE_ID = ? AND PAGE_ID = ? AND ENABLED_FLAG = 1 AND DELETED_FLAG = 0;

GET_PERSON_ORG_LEVEL_DETAILS=SELECT old.NAME AS LevelDef,ole.ORGLEVELENTRYID AS OleId,COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN CAST(cpe.UNITID AS  NVARCHAR) END,CASE WHEN old.NAME LIKE 'Dept' THEN cgm.GMID END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMID END,CASE WHEN old.NAME LIKE 'Contractor' THEN CAST(cc.ContractorId AS NVARCHAR) END) AS Id ,COALESCE(CASE WHEN old.NAME LIKE 'Principal%' THEN cpe.NAME END,CASE WHEN old.NAME LIKE 'Dept' THEN cgm.GMNAME END,CASE WHEN old.NAME LIKE 'Area' THEN cgm1.GMNAME END,CASE WHEN old.NAME LIKE 'Contractor' THEN cc.NAME END) AS Description FROM ORGLEVELENTRY ole JOIN ORGLEVELDEF old ON old.ORGLEVELDEFID = ole.ORGLEVELDEFID JOIN OLACCTSETMM oasm ON oasm.ORGLEVELENTRYID = ole.ORGLEVELENTRYID JOIN ORGACCTSET oas ON oas.ORGACCTSETID = oasm.ORGACCTSETID LEFT JOIN CMSPRINCIPALEMPLOYER cpe ON cpe.CODE  = ole.NAME AND old.NAME LIKE 'Principal%' LEFT JOIN CMSGENERALMASTER cgm ON cgm.GMNAME  = ole.NAME AND old.NAME LIKE 'Dept' LEFT JOIN CMSGENERALMASTER cgm1 ON cgm1.GMNAME  = ole.NAME AND old.NAME LIKE 'Area' LEFT JOIN CMSCONTRACTOR cc ON cc.CODE = ole.NAME AND old.NAME LIKE 'Contractor' WHERE oas.SHORTNM = ? AND ole.INACTIVE = '1'

GET_ROLE_RIGHTS_BY_ROLE_AND_PAGE=SELECT rr.ROLE_RIGHT_ID, rr.ROLE_ID, rr.PAGE_ID, rr.ADD_RIGHTS, rr.EDIT_RIGHTS, rr.DELETE_RIGHTS, rr.IMPORT_RIGHTS, rr.EXPORT_RIGHTS, rr.VIEW_RIGHTS, rr.LIST_RIGHTS, rr.ENABLED_FLAG, rr.DELETED_FLAG, rr.CREATED_BY, rr.CREATION_DATE, rr.LAST_UPDATED_BY, rr.LAST_UPDATED_DATE, r.GMTYPEID as roleTypeId, p.GMTYPEID as pageTypeId, r.GMNAME as roleName, p.GMNAME as pageName FROM CMSRoleRights rr JOIN CMSGeneralMaster r ON rr.ROLE_ID = r.GMID JOIN CMSGeneralMaster p ON rr.PAGE_ID = p.GMID JOIN CMSGMTYPE rType ON r.GMTYPEID = rType.GMTYPEID JOIN CMSGMTYPE pType ON p.GMTYPEID = pType.GMTYPEID WHERE rType.GMTYPE = 'ROLE' AND pType.GMTYPE = 'PAGE' AND rr.ROLE_ID = ? AND rr.PAGE_ID = ?;

##MASTER USER DAOIMPL##

GET_MASTERUSER_BY_USERACCOUNT =select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.userAccount,mu.ContactNumber,mu.Status,mu.Password  from MasterUser mu where mu.userAccount=? 

GET_MASTERUSER_BY_USERNAME_AND_PASSWROD=select mu.UserId,mu.EmailId,mu.FirstName,mu.LastName,mu.UserName,mu.RoleName,mu.ContactNumber,mu.Status,mu.BusinessType from MasterUser mu where mu.UserName=? and mu.Password=?

GET_PASSWORD_BY_USERID=SELECT Password FROM MASTERUSER WHERE UserId = ?;

GET_UPDATE_PASSWORD=UPDATE MASTERUSER SET Password = ? WHERE UserId = ?;

##ORG LEVEL DAOIMPL##

SAVE_ORG_LEVEL=INSERT INTO ORGLEVELDEF (NAME, SHORTNAME, ORGHIERARCHYLEVEL, MINIMUMLENGTH, MAXIMUMLENGTH,UPDATEDBYUSRACCTID)VALUES (?, ?, ?, ?, ?, ?);

FIND_BY_NAME_AND_SHORTNAME=SELECT * FROM ORGLEVELDEF WHERE NAME = ? AND SHORTNAME = ?;

EXISTS_BY_NAME_SHORTNAME_AND_HIERARCHY=SELECT COUNT(*) FROM ORGLEVELDEF WHERE LOWER(NAME) = LOWER(?) AND LOWER(SHORTNAME) = LOWER(?) AND ORGHIERARCHYLEVEL = ? and INACTIVE=1;

SAVE_OR_LEVEL_CHECK=SELECT COUNT(*) FROM ORGLEVELDEF WHERE NAME = ? AND SHORTNAME = ?;

SAVE_OR_LEVEL_UPDATE=UPDATE ORGLEVELDEF SET ORGHIERARCHYLEVEL = ?, MINIMUMLENGTH = ?, MAXIMUMLENGTH = ?, UPDATEDBYUSRACCTID = ? WHERE NAME = ? AND SHORTNAME = ?;

SAVE_OR_LEVEL_INSERT=INSERT INTO ORGLEVELDEF (NAME, SHORTNAME, ORGHIERARCHYLEVEL, MINIMUMLENGTH, MAXIMUMLENGTH,  UPDATEDBYUSRACCTID) VALUES (?, ?, ?, ?, ?,  ?);

IS_HIERARCHY_LEVEL=SELECT COUNT(*) FROM ORGLEVELDEF WHERE ORGHIERARCHYLEVEL = ?;

HAS_DEPENDENCIES=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ?;

DELETE_ORG_LEVEL=UPDATE ORGLEVELDEF SET INACTIVE=0 WHERE ORGLEVELDEFID = ?;

FETCH_ALL_ORG_LEVELS=SELECT * FROM ORGLEVELDEF where INACTIVE=1;

UPDATE_ORG_LEVEL=UPDATE ORGLEVELDEF SET ORGLEVELNAME = ?, SHORTNAME = ?, ORGHIERARCHYLEVEL = ? WHERE ORGLEVELDEFID = ?;

UPDATE_OR_LEVEL=UPDATE ORGLEVELDEF SET INACTIVE=0 WHERE ORGLEVELDEFID = ?;

UPDATE_ORG_LEVELS=UPDATE ORGLEVELDEF SET NAME = ?, SHORTNAME = ?, ORGHIERARCHYLEVEL = ?, MINIMUMLENGTH = ?, MAXIMUMLENGTH = ?, UPDATEDBYUSRACCTID = ?, UPDATE_DTM = CURRENT_TIMESTAMP WHERE ORGLEVELDEFID = ?;

EXISTS_BY_ID=SELECT COUNT(*) FROM ORGLEVELDEF WHERE ORGLEVELDEFID = ?;

GET_ACTIVE_ORG_LEVELS=SELECT ORGLEVELDEFID, NAME FROM ORGLEVELDEF WHERE INACTIVE = 1;

GET_ORG_ENTRIES_BY_DEF_ID=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

SAVE_ORG_LEVEL_ENTRY=INSERT INTO ORGLEVELENTRY (ORGLEVELDEFID, NAME, DESCRIPTION, INACTIVE, UPDATEDBYUSRACCTID) VALUES (?, ?, ?, ?, ?);

UPDATE_ORG_LEEVEL_ENTRY=UPDATE ORGLEVELENTRY SET NAME = ?, DESCRIPTION = ?, UPDATEDBYUSRACCTID = ? WHERE ORGLEVELENTRYID = ?;

DELETE_ORG_LEEVEL_ENTRY=UPDATE ORGLEVELENTRY SET INACTIVE = 0 WHERE ORGLEVELENTRYID = ?;

GET_ORG_LEVEL_ENTRY_BY_ID=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELENTRYID = ? AND INACTIVE = 1;

GET_AVAILABLE_ENTRIES=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

GET_SELECTED_ENTRIES=SELECT * FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

FIND_BASIC_INFO=SELECT TOP 1 os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

##ORG LEVEL MAPPING DAOIMPL##

FIND_ALL=SELECT om.*, os.SHORTNM as shortName, os.LONGDSC as longDescription FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID;

FIND_BY_ALL=SELECT om.*, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_ORG_BY_ID=SELECT om.*, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

SAVE=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID) VALUES (?, ?);

DELETE=DELETE FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ?;

GET_AVAILABLE_ENTRIES_QUERY =SELECT ORGLEVELENTRYID, NAME, DESCRIPTION FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1);

GET_SELECTED_ENTRIES_QUERY =SELECT ORGLEVELENTRYID, NAME, DESCRIPTION FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND INACTIVE = 1;

INSERT_INTO_ORG_ACT_SET=INSERT INTO ORGACCTSET (SHORTNM, LONGDSC, ALLOWALLSW, VERSIONCNT, USEVALIDACCTSW)VALUES (?, ?, 0, 1, 0);

DELETE_EXISTING_RECORDS=DELETE FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ?;

INSERT_INTO_ORG_ACT_SETMM=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

GET_NEXT_ORG_ACCT_SET_ID-=SELECT MAX(ORGACCTSETID) FROM ORGACCTSET;

SAVE_ORG_ACCT_SET=INSERT INTO ORGACCTSET (SHORTNM, LONGDSC) OUTPUT INSERTED.ORGACCTSETID VALUES (?, ?);

SAVE_ORG_LEVEL_MAPPING=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, getdate());

FIND_AVAILABLE_MAPPINGS=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE NOT EXISTS ( SELECT 1 FROM ORGACCTSET os2 WHERE os2.ORGACCTSETID = om.ORGACCTSETID AND os2.ORGACCTSETID = ?);

FIND_SELECTED_MAPPINGS=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_BASIC_INFORMATION=SELECT TOP 1 os.SHORTNM, os.LONGDSC,om.ORGACCTSETID FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

FIND_ALL_MAPS=SELECT distinct os.ORGACCTSETID, os.SHORTNM as shortName, os.LONGDSC as longDescription FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID;

##USERDAOIMPL##

GET_USER_BY_ID=SELECT userId, userAccount, emailId, firstName, lastName, contactNumber,  status, password FROM MASTERUSER WHERE userId = ?;

GET_ALL_USERS=SELECT userId, userAccount, emailId, firstName, lastName, contactNumber,  status, password FROM MASTERUSER where status='A' ;

SAVE_USERS=INSERT INTO MASTERUSER (userId, userAccount, emailId, firstName, lastName, fullName, contactNumber,  status, password) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

UPDATE_USERS=UPDATE MASTERUSER SET userAccount = ?, emailId = ?, firstName = ?, lastName = ?, fullName = ?, contactNumber = ?,  status = ?, password = ? WHERE userId = ?;

DELETE_USERS=DELETE FROM MASTERUSER WHERE userId = ?;

SAVE_USER=INSERT INTO MASTERUSER (FirstName, LastName, EmailId, ContactNumber, Password, Status, userAccount) VALUES (?, ?, ?, ?, ?, 'A', ?);

##duplicate CHECK_DUPLICATE_ROLE_RIGHTS
CHECK_DUPLICATE_GMMASTER=select cgm.GMNAME from CMSGMTYPE cgt join CMSGENERALMASTER cgm on cgt.GMTYPEID=cgm.GMTYPEID where cgm.GMNAME=? and cgt.GMTYPEID=?;

TRANSACTION_ID_EXISTS=SELECT GPM.TransactionId FROM GATEPASSMAIN GPM WHERE GPM.TransactionId=?

GET_MASTER_USERACCOUNT=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? and status='A' ;

HAS_PAGE_ACTION_PERMISSION_FOR_ROLE= select crr.ADD_RIGHTS,crr.EDIT_RIGHTS,crr.DELETE_RIGHTS,crr.IMPORT_RIGHTS,crr.EXPORT_RIGHTS,crr.VIEW_RIGHTS from CMSROLERIGHTS  crr join CMSGENERALMASTER cgm on cgm.GMID=crr.PAGE_ID  where cgm.GMDESCRIPTION=? and ROLE_ID=? AND ENABLED_FLAG = 1 AND DELETED_FLAG = 0;

GET_NEXT_GATEPASSID_SEQ=SELECT MAX(CAST(SUBSTRING(GatePassId, 3, LEN(GatePassId)) AS INT)) FROM gatepassmain WHERE GatePassId IS NOT NULL AND GatePassId != '' 

GET_ALL_RENEW_FOR_CREATOR=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName,  gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm  JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) where gpm.UpdatedBy=? and (gpm.GatePassTypeId=? and gpm.GatePassStatus=?)or (gpm.GatePassTypeId ='2' and gpm.GatePassStatus in ('3','4')) and gpm.departmentid=? and gpm.UnitId=? and gpm.GatePassId IS NOT NULL AND gpm.GatePassId != ''

GET_ALL_GATE_PASS_ACTION_FOR_SEQUENTIAL_APPROVER=select  gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber, cc.NAME as ContractorName, gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) JOIN GATEPASSAPPROVERHIERARCHY gah ON gpm.GatePassTypeId = gah.ACTION_ID and gah.[Index]=((select count( DISTINCT gas.GatePassApprovalStatusId)+1 from GATEPASSAPPROVERHIERARCHY gai1 join GATEPASSAPPROVALSTATUS gas on gas.RoleId=gai1.ROLE_ID and gas.status=4 and gpm.gatePassId=gas.gatePassId and gas.GatePassTypeId=?)) LEFT JOIN GATEPASSAPPROVALSTATUS gas ON gpm.GatePassId = gas.GatePassId AND gah.ROLE_ID = gas.RoleId and gas.GatePassTypeId=?	 where gpm.gatepassstatus='3'  and gpm.GatePassTypeId=? AND gas.GatePassId IS NULL and gah.ROLE_ID=? and gpm.departmentid=? and gpm.UnitId=?

GET_ALL_GATE_PASS_ACTION_FOR_PARALLEL_APPROVER=select gpm.TransactionId,gpm.GatePassId,gpm.GatePassTypeId,gpm.FirstName,gpm.LastName,cgm.GMNAME,gpm.DOB,gpm.AadharNumber,cc.NAME as ContractorName,gpm.ContractorId as VendorCode,cpe.NAME as UnitName,gpm.GatePassStatus from GATEPASSMAIN gpm JOIN CMSCONTRACTOR cc ON cc.CONTRACTORID=gpm.ContractorId join CMSPRINCIPALEMPLOYER cpe on cpe.UNITID=gpm.UnitId join CMSGENERALMASTER cgm on cgm.GMID = TRY_CAST(gpm.Gender AS BIGINT) join GATEPASSAPPROVERHIERARCHY gah     ON gpm.GatePassTypeId = gah.ACTION_ID left join  GATEPASSAPPROVALSTATUS gas ON gas.GatePassId = gpm.GatePassId AND gas.RoleId = ? and gas.GatePassTypeId=? where (gah.ROLE_ID=?) and gas.GatePassId IS NULL and gpm.GatePassStatus='3' and gpm.GatePassTypeId=? and gpm.departmentid=? and gpm.UnitId=?

GET_VIEW_USER_DETAILS=SELECT  firstName, lastName,  emailId,contactNumber, password, userAccount FROM MASTERUSER WHERE UserId =?;

IS_DUPLICATE_ENTRY=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELDEFID = ? AND NAME=? AND INACTIVE = 1;

GET_WORKORDERS_BY_CONTRACTORID_UNITID=SELECT WORKORDERID, SAP_WORKORDER_NUM, CONTRACTORID, VALIDFROM, VALIDDT, UNITID FROM Workorder WHERE CONTRACTORID = ? AND UNITID = ?;

IS_DUPLICATE_GM_NAME=SELECT COUNT(*) from CMSGMTYPE cgt join CMSGENERALMASTER cgm on cgt.GMTYPEID=cgm.GMTYPEID where cgm.GMNAME=? and cgt.GMTYPEID=? and cgm.ISACTIVE=1;

DELETE_ROLE_RIGHTS=UPDATE CMSROLERIGHTS SET DELETED_FLAG = '1' WHERE ROLE_RIGHT_ID = ?;

EXISTS_BY_SHORTNAME=SELECT COUNT(*) FROM ORGACCTSET WHERE SHORTNM = ?;

GET_ORG_LEVEL_MAPPING_BY_ID=SELECT om.ORGLEVELENTRYID, om.ORGACCTSETID, os.SHORTNM, os.LONGDSC FROM OLACCTSETMM om LEFT JOIN ORGACCTSET os ON om.ORGACCTSETID = os.ORGACCTSETID WHERE om.ORGACCTSETID = ?;

GET_SELECTED_ENTRIES=SELECT oe.ORGLEVELENTRYID, oe.NAME, oe.DESCRIPTION FROM OLACCTSETMM om JOIN ORGLEVELENTRY oe ON om.ORGLEVELENTRYID = oe.ORGLEVELENTRYID WHERE om.ORGACCTSETID = ? AND oe.ORGLEVELDEFID = ?;

GET_AVAILABLE_ENTRIES=SELECT oe.ORGLEVELENTRYID, oe.NAME, oe.DESCRIPTION FROM ORGLEVELENTRY oe WHERE oe.ORGLEVELDEFID = ? AND NOT EXISTS (SELECT 1 FROM OLACCTSETMM om  WHERE om.ORGLEVELENTRYID = oe.ORGLEVELENTRYID AND om.ORGACCTSETID = ? );

UPDATE_ORG_LEVEL_ENTRIES_CHECK=SELECT COUNT(*) FROM OLACCTSETMM WHERE ORGLEVELENTRYID = ? AND ORGACCTSETID = ?;

UPDATE_ORG_LEVEL_ENTRIES_INSERT=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

ORG_LEVEL_ENTRY_EXIST=SELECT COUNT(*) FROM ORGLEVELENTRY WHERE ORGLEVELENTRYID = ?;

SAVE_ORG_LEVEL_MAP=INSERT INTO OLACCTSETMM (ORGLEVELENTRYID, ORGACCTSETID, UPDATEDTM) VALUES (?, ?, GETDATE());

DELETE_ORG_LEVEL_MAPPING=DELETE FROM OLACCTSETMM WHERE ORGACCTSETID = ? AND ORGLEVELENTRYID = ?;

GET_EXIST_MAPPINGS=SELECT ORGLEVELENTRYID FROM OLACCTSETMM WHERE ORGACCTSETID = ?;

INSERT_ROLE_MAPPING=INSERT INTO UserRoleMapping (UserId, RoleId) VALUES (?, ?);

CHANGE_USERPASSWORD_SELECT=SELECT password FROM MASTERUSER WHERE userAccount = ? AND Status='A' ;

CHANGE_USERPASSWORD_UPDATE=UPDATE MASTERUSER SET password = ? WHERE userAccount = ? AND Status='A' ;

RESET_USERPASSWORD_SELECT=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? AND Status='A';

RESET_USERPASSWORD_UPDATE=UPDATE MASTERUSER SET password = ? WHERE userAccount = ? AND Status='A';

GET_USER_ROLE_IDS=SELECT RoleId FROM UserRoleMapping WHERE UserId = ?;

GET_USER_ROLE=SELECT RoleId FROM UserRoleMapping WHERE UserId = ?;

UPDATE_USER_ROLE=UPDATE MASTERUSER SET userAccount = ?, EmailId = ?, FirstName = ?, LastName = ?, ContactNumber = ?, Password = ? WHERE UserId = ?;

DELETE_USER_ROLE=DELETE FROM UserRoleMapping WHERE UserId = ?;

INSERT_USER_ROLE=INSERT INTO UserRoleMapping (UserId, RoleId) VALUES (?, ?);

DELETE_USER=UPDATE MASTERUSER SET status = 'NA' WHERE UserId = ?;

##GET_ROLES_BY_USER=SELECT STRING_AGG(gm.GMNAME, '; ') AS RoleNames FROM UserRoleMapping urm JOIN CMSGENERALMASTER gm ON urm.RoleId = gm.GMID WHERE urm.UserId = ?;

DOES_USER_EXIST=SELECT COUNT(*) FROM MASTERUSER WHERE userAccount = ? AND Status='A';

DEPENDENCEY_ORGLEVEL_CHECK=select count(*) from ORGLEVELENTRY where ORGLEVELDEFID=?;

DEPENDENCY_ORGLEVEL_UPDATE=DELETE FROM ORGLEVELDEF WHERE ORGLEVELDEFID = ?;

GET_ALL_ORG_LEVELS=select * from ORGLEVELDEF;


